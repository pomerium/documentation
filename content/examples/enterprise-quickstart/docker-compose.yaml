version: "3"
networks:
  main: {}
services:
  pomerium:
    image: pomerium/pomerium:latest
    volumes:
      - ./config.yaml:/pomerium/config.yaml:ro
    ports:
      - 443:443
    networks:
      main:
        aliases:
        - authenticate.localhost.pomerium.io
  pomerium_console:
    networks:
      main:
    depends_on:
      database:
        condition: service_healthy
      pomerium:
        condition: service_started
    image: docker.cloudsmith.io/pomerium/enterprise/pomerium-console:latest
    expose:
      - 8701
      - 9090
    environment:
      - AUDIENCE=console.localhost.pomerium.io
      - ADMINISTRATORS=admin@example.com
      - DATABASE_ENCRYPTION_KEY=tXBj4gGDj45m8cW7ehhcy5lRuxsEeNl0X/nnsN5YJPw=
      - DATABROKER_SERVICE_URL=pomerium://pomerium:5443
      - SHARED_SECRET=mxGl062SqkrbQKvqG9R2jqHqxq1Oi1BNj2AAeZHNq7c=
      - DATABASE_URL=postgresql://<user>:<password>@database/<database>?sslmode=disable
      # - LICENSE_KEY=REPLACE_ME
      - PROMETHEUS_LISTEN_ADDR=:9090
      - PROMETHEUS_DATA_DIR=/data
      - AUTHENTICATE_SERVICE_URL=https://authenticate.localhost.pomerium.io
    volumes:
      - ./pomerium/metrics:/data:rw
      - ./console-config.yaml:/pomerium/config.yaml:ro
  database:
    networks:
      main: {}
    image: postgres:latest
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d pomeriumDB -U zach" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
    volumes:
      - ./pgdata:/var/lib/postgresql/data
  verify:
    networks:
      main: {}
    image: pomerium/verify:latest
    expose:
      - 8000
    restart: always
volumes:
  pgdata:
