{
  "address": {
    "id": "address",
    "title": "Address",
    "path": "/address",
    "description": "Address specifies the host and port to serve HTTP requests from.",
    "short_description": "",
    "type": "string",
    "services": ["proxy"]
  },
  "authenticate-service-url": {
    "id": "authenticate-service-url",
    "path": "/authenticate-service-url",
    "title": "Authenticate Service URL",
    "description": "Authenticate Service URL is the externally accessible URL for the authenticate service.",
    "short_description": "",
    "type": "URL",
    "services": ["proxy", "authenticate", "authorize"]
  },
  "autocert": {
    "id": "autocert",
    "path": "/autocert",
    "title": "Autocert",
    "description": "Turning on autocert allows Pomerium to automatically retrieve, manage, and renew public facing TLS certificates from Lets Encrypt.",
    "short_description": "Retrieve, manage, and renew public facing TLS certificates from Lets Encrypt.",
    "services": ["authenticate", "proxy"],
    "type": "bool"
  },
  "autocert-ca": {
    "id": "autocert-ca",
    "title": "Autocert CA",
    "path": "/autocert",
    "description": "Autocert CA is the directory URL of the ACME CA to use when requesting certificates.",
    "short_description": "Autocert CA is the directory URL of the ACME CA to use when requesting certificates.",
    "type": "",
    "services": ["authenticate", "proxy"]
  },
  "autocert-email": {
    "id": "autocert-email",
    "title": "Autocert Email",
    "path": "/autocert",
    "description": "Autocert Email is the email address to use when requesting certificates from an ACME CA.",
    "short_description": "Use Autocert Email address when requesting certificates from an ACME CA.",
    "services": ["authenticate", "proxy"],
    "type": "email"
  },
  "autocert-must-staple": {
    "id": "autocert-must-staple",
    "title": "Autocert Must-Staple",
    "path": "/autocert",
    "type": "bool",
    "short_description": "Forces Autocert to request a certificate with the status_request extension",
    "services": ["authenticate", "proxy"]
  },
  "autocert-directory": {
    "id": "autocert-directory",
    "title": "Autocert Directory",
    "path": "/autocert",
    "description": "Autocert directory is the path which autocert will store x509 certificate data.",
    "services": ["authenticate", "proxy"],
    "short_description": "String pointing to the path of the directory",
    "type": "string"
  },
  "autocert-use-staging": {
    "id": "autocert-use-staging",
    "title": "Autocert Use Staging",
    "path": "/autocert",
    "description": "Autocert Use Staging setting allows you to use Let's Encrypt's staging environment, which has more lenient usage limits than the production environment.",
    "short_description": "Enable this setting to use Let's Encrypt's staging environment.",
    "type": "bool",
    "services": ["authenticate", "proxy"]
  },
  "autocert-eab-key-id": {
    "id": "autocert-eab-key-id",
    "title": "Autocert EAB Key ID",
    "path": "/autocert",
    "description": "Autocert EAB Key ID is the key identifier when requesting a certificate from a CA with External Account Binding enabled.",
    "short_description": "String containing the identifier for an ACME EAB key to use",
    "type": "string",
    "services": ["authenticate", "proxy"]
  },
  "autocert-eab-mac-key": {
    "id": "autocert-eab-mac-key",
    "title": "Autocert EAB MAC Key",
    "path": "/autocert",
    "description": "Autocert EAB MAC Key is the base64url-encoded secret key corresponding to the Autocert EAB Key ID.",
    "short_description": "String containing a base64url-encoded secret key",
    "type": "string",
    "services": ["authenticate", "proxy"]
  },
  "autocert-trusted-certificate-authority": {
    "id": "autocert-trusted-certificate-authority",
    "title": "Autocert Trusted Certificate Authority",
    "path": "/autocert",
    "services": ["authenticate", "proxy"],
    "type": "string",
    "short_description": "Base64-encoded string or relative file location"
  },
  "branding-settings": {
    "id": "branding",
    "title": "Branding Settings",
    "path": "/branding",
    "type": "string",
    "short_description": "Customize your Console with Pomerium's branding settings."
  },
  "certificates": {
    "id": "certificates",
    "title": "Certificates Settings",
    "path": "/certificates",
    "type": "string",
    "short_description": "Certificate relative file location string",
    "services": []
  },
  "client-certificate-authority": {
    "id": "client-certificate-authority",
    "title": "Client Certificate Authority",
    "path": "/certificates",
    "services": [],
    "short_description": "[base64 encoded] string or relative file location",
    "type": "string"
  },
  "cookies-settings": {
    "id": "cookies",
    "title": "Cookies Settings",
    "path": "/cookies",
    "services": [],
    "type": "string",
    "short_description": "Learn how to configure Pomerium's cookies settings."
  },
  "client-crl": {
    "id": "client-crl",
    "title": "Client CRL",
    "path": "/certificates",
    "services": [],
    "type": "string",
    "short_description": "Base64-encoded string or relative file location"
  },
  "certificate-authority": {
    "id": "certificate-authority",
    "title": "Certificate Authority",
    "path": "/certificates",
    "description": "Certificate Authority is set when behind-the-ingress service communication uses self-signed certificates.",
    "services": [],
    "type": "string",
    "short_description": "Base64 encoded string or relative file location"
  },
  "identity-provider-settings": {
    "id": "identity-provider-settings",
    "title": "Identity Provider Settings",
    "path": "/identity-provider-settings",
    "description": "Configure and self-host your own Identity Provider with Pomerium's Identity Provider settings.",
    "type": "string"
  },
  "polling-min-delay": {
    "id": "polling-min-delay",
    "title": "Min Polling Delay",
    "path": "/../enterprise/reference/configure#polling-minmax-delay",
    "description": "Minimum delay between requests to the IdP Directory.",
    "type": "string"
  },
  "polling-max-delay": {
    "id": "polling-max-delay",
    "title": "Max Polling Delay",
    "path": "/../enterprise/reference/configure#polling-minmax-delay",
    "description": "Minimum delay between requests to the IdP Directory.",
    "type": "string"
  },
  "ext-data-url": {
    "id": "ext-data-url",
    "title": "External Data URL",
    "short_description": "URL to the external dataset",
    "path": "/../enterprise/reference/configure#url",
    "enterpriseOnly": true
  },
  "ext-data-record-type": {
    "id": "ext-data-record-type",
    "title": "External Data Record Type",
    "short_description": "Overridden by the directory structure of an archive file dataset",
    "path": "/../enterprise/reference/configure#record-type",
    "enterpriseOnly": true
  },
  "ext-data-foreign-key": {
    "id": "ext-data-foreign-key",
    "title": "Foreign Key",
    "short_description": "Associates this key from a request to the external data",
    "path": "/../enterprise/reference/configure#foreign-key",
    "enterpriseOnly": true
  },
  "ext-data-headers": {
    "id": "ext-data-headers",
    "title": "External Data Request Headers",
    "short_description": "Used when requesting the external dataset",
    "path": "/../enterprise/reference/configure#headers",
    "enterpriseOnly": true
  },
  "ext-data-insecure-tls": {
    "id": "ext-data-insecure-tls",
    "title": "Allow Insecure TLS",
    "path": "/../enterprise/reference/configure#allow-insecure-tls",
    "enterpriseOnly": true
  },
  "ext-data-client-tls-key": {
    "id": "ext-data-client-tls-key",
    "title": "Client TLS Key",
    "path": "/../enterprise/reference/configure#client-tls-key",
    "enterpriseOnly": true
  },
  "ext-data-polling": {
    "id": "ext-data-polling",
    "title": "Polling Min / Max Delay",
    "path": "/../enterprise/reference/configure#polling-minmax-delay",
    "enterpriseOnly": true
  },
  "data-broker-service": {
    "id": "data-broker-service",
    "title": "Databroker Service",
    "path": "/databroker",
    "services": ["databroker"]
  },
  "data-broker-service-url": {
    "id": "data-broker-service-url",
    "title": "Databroker Service URL",
    "path": "/databroker",
    "services": [],
    "type": "URL"
  },
  "debug": {
    "id": "debug",
    "title": "Debug",
    "path": "/debug",
    "description": "Debug enables colored, human-readable logs to be streamed to standard out.",
    "services": [],
    "type": "bool"
  },
  "global-timeouts": {
    "id": "global-timeouts",
    "title": "Global Timeouts",
    "path": "/global-timeouts",
    "description": "Timeouts set the global server timeouts. Timeouts can also be set for individual routes.",
    "services": [],
    "type": ""
  },
  "grpc-settings": {
    "id": "grpc-settings",
    "title": "gRPC Settings",
    "path": "/grpc",
    "description": "Configure gRPC configuration settings in Pomerium.",
    "services": [],
    "type": "string"
  },
  "grpc-address": {
    "id": "grpc-address",
    "title": "gRPC Address",
    "path": "/grpc#grpc-address",
    "description": "Address specifies the host and port to serve GRPC requests from.",
    "services": [],
    "type": "string"
  },
  "grpc-insecure": {
    "id": "grpc-insecure",
    "title": "gRPC Insecure",
    "path": "/grpc#grpc-insecure",
    "description": "If set, GRPC Insecure disables transport security for communication between the proxy and authorize components.",
    "services": [],
    "type": "bool"
  },
  "grpc-client-timeout": {
    "id": "grpc-client-timeout",
    "title": "gRPC Client Timeout",
    "path": "/grpc#grpc-client-timeout",
    "services": [],
    "type": ""
  },
  "grpc-client-dns-roundrobin": {
    "id": "grpc-client-dns-roundrobin",
    "title": "gRPC Client DNS RoundRobin",
    "path": "/grpc#grpc-client-dns-roundrobin",
    "services": [],
    "type": "bool"
  },
  "http-redirect-address": {
    "id": "http-redirect-address",
    "title": "HTTP Redirect Address",
    "path": "/http-redirect-address",
    "description": "If set, the HTTP Redirect Address specifies the host and port to redirect http to https traffic on.",
    "services": [],
    "type": "string"
  },
  "insecure-server": {
    "id": "insecure-server",
    "title": "Insecure Server",
    "path": "/insecure-server",
    "description": "Turning on insecure server mode will result in pomerium starting, and operating without any protocol encryption in transit.",
    "services": [],
    "type": "bool"
  },
  "dns-lookup-family": {
    "id": "dns-lookup-family",
    "title": "DNS Lookup Family",
    "path": "/dns-lookup-family",
    "description": "The DNS IP address resolution policy.",
    "services": [],
    "type": "string"
  },
  "log-level": {
    "id": "log-level",
    "title": "Log Level",
    "path": "/log-level",
    "description": "Log level sets the global logging level for pomerium.",
    "services": [],
    "type": "string"
  },
  "metrics-settings": {
    "id": "metrics-settings",
    "title": "Metrics Settings",
    "path": "/metrics",
    "description": "Configure metrics settings in Pomerium.",
    "services": [],
    "type": "string"
  },
  "metrics-address": {
    "id": "metrics-address",
    "title": "Metrics Address",
    "path": "/metrics#metrics-address",
    "description": "Expose a prometheus format HTTP endpoint on the specified port.",
    "services": [],
    "type": "string"
  },
  "metrics-basic-authentication": {
    "id": "metrics-basic-authentication",
    "title": "Metrics Basic Authentication",
    "path": "/metrics#metrics-basic-authentication",
    "services": [],
    "type": ""
  },
  "metrics-certificate": {
    "id": "metrics-certificate",
    "title": "Metrics Certificate",
    "path": "/metrics#metrics-certificate",
    "services": [],
    "type": "string",
    "short_description": "certificate relative file location string"
  },
  "metrics-client-certificate-authority": {
    "id": "metrics-client-certificate-authority",
    "title": "Metrics Client Certificate Authority",
    "path": "/metrics#metrics-client-certificate-authority",
    "services": [],
    "type": "string",
    "short_description": "Base64-encoded string or relative file location"
  },
  "proxy-log-level": {
    "id": "proxy-log-level",
    "title": "Proxy Log Level",
    "path": "/proxy-log-level",
    "description": "Log level sets the logging level for the Pomerium Proxy service.",
    "services": [],
    "type": "string"
  },
  "service-mode": {
    "id": "service-mode",
    "title": "Service Mode",
    "path": "/service-mode",
    "description": "Service mode sets the pomerium service(s) to run.",
    "services": [],
    "type": "string"
  },
  "shared-secret": {
    "id": "shared-secret",
    "title": "Shared Secret",
    "path": "/shared-secret",
    "description": "Shared Secret is the base64 encoded 256-bit key used to mutually authenticate requests between services.",
    "services": [],
    "type": "string",
    "short_description": "Base64 encoded string"
  },
  "shared-secret-file": {
    "id": "shared-secret-file",
    "title": "Shared Secret File",
    "path": "/shared-secret-file",
    "description": "File path containing base64 encoded shared secret.",
    "services": [],
    "type": "string",
    "short_description": "Path to base64 encoded string"
  },
  "tracing": {
    "id": "tracing",
    "title": "Tracing",
    "path": "/tracing",
    "services": []
  },
  "use-proxy-protocol": {
    "id": "use-proxy-protocol",
    "title": "Use Proxy Protocol",
    "path": "/use-proxy-protocol",
    "services": [],
    "type": "bool"
  },
  "envoy-bootstrap-options": {
    "id": "envoy-bootstrap-options",
    "title": "Envoy Bootstrap Options",
    "path": "/envoy-bootstrap-options",
    "services": [],
    "type": "string"
  },
  "authenticate-callback-path": {
    "id": "authenticate-callback-path",
    "title": "Authenticate Callback Path",
    "path": "/authenticate-callback-path",
    "description": "The authenticate callback path is the path/url from the authenticate service that will receive the response from your identity provider.",
    "services": [],
    "type": "string"
  },
  "authenticate-internal-service-url": {
    "id": "authenticate-internal-service-url",
    "title": "Authenticate Internal Service URL",
    "path": "/authenticate-internal-service-url",
    "services": [],
    "type": "URL"
  },
  "identity-provider-client-id": {
    "id": "identity-provider-client-id",
    "title": "Identity Provider Client ID",
    "path": "/identity-provider-settings",
    "description": "Client ID is the OAuth 2.0 Client Identifier retrieved from your identity provider.",
    "services": [],
    "type": "string"
  },
  "identity-provider-client-secret-file": {
    "id": "identity-provider-client-secret-file",
    "title": "Identity Provider Client Secret File",
    "path": "/identity-provider-settings",
    "description": "File path containing the client secret, the OAuth 2.0 Secret Identifier retrieved from your identity provider.",
    "services": [],
    "type": "string"
  },
  "identity-provider-client-secret": {
    "id": "identity-provider-client-secret",
    "title": "Identity Provider Client Secret",
    "path": "/identity-provider-settings",
    "description": "Client Secret is the OAuth 2.0 Secret Identifier retrieved from your identity provider.",
    "services": [],
    "type": "string"
  },
  "identity-provider-name": {
    "id": "identity-provider-name",
    "title": "Identity Provider Name",
    "path": "/identity-provider-settings",
    "description": "Provider is the short-hand name of a built-in OpenID Connect (oidc) identity provider to be used for authentication.",
    "services": [],
    "type": "string"
  },
  "identity-provider-scopes": {
    "id": "identity-provider-scopes",
    "title": "Identity Provider Scopes",
    "path": "/identity-provider-settings",
    "description": "Identity provider scopes correspond to access privilege scopes as defined in Section 33 of OAuth 20 RFC6749.",
    "services": [],
    "type": "comma separated strings"
  },
  "identity-provider-url": {
    "id": "identity-provider-url",
    "title": "Identity Provider URL",
    "path": "/identity-provider-settings",
    "description": "Provider URL is the base path to an identity provider's OpenID connect discovery document.",
    "services": [],
    "type": "string"
  },
  "identity-provider-request-params": {
    "id": "identity-provider-request-params",
    "title": "Identity Provider Request Params",
    "path": "/identity-provider-settings",
    "description": "Headers specifies a mapping of HTTP Header to be added to proxied  requests. Nota bene Downstream application headers will be overwritten by Pomerium's headers on conflict.",
    "services": [],
    "type": "map of strings key value pairs"
  },
  "identity-provider-polling-min-max-delay": {
    "id": "identity-provider-min-max-delay",
    "title": "Identity Provider Min/Max Delay",
    "path": "/identity-provider-settings",
    "description": "Sets the minimum and maximum delay times between requests to the identity provider directory.",
    "services": [],
    "type": "string"
  },
  "authorize-service-url": {
    "id": "authorize-service-url",
    "title": "Authorize Service URL",
    "path": "/authorize-service-url",
    "description": "Authorize Service URL is the location of the internally accessible Authorize service.",
    "services": [],
    "type": "URL"
  },
  "authorize-internal-service-url": {
    "id": "authorize-internal-service-url",
    "title": "Authorize Internal Service URL",
    "path": "/authorize-internal-service-url",
    "services": [],
    "type": "URL"
  },
  "default-upstream-timeout": {
    "id": "default-upstream-timeout",
    "title": "Default Upstream Timeout",
    "path": "/default-upstream-timeout",
    "description": "Default Upstream Timeout is the default timeout applied to a proxied route when no timeout key is specified by the policy.",
    "services": [],
    "type": ""
  },
  "set-response-headers": {
    "id": "set-response-headers",
    "title": "Set Response Headers",
    "path": "/set-response-headers",
    "services": [],
    "type": "map of strings key value pairs"
  },
  "set-response-headers-route": {
    "id": "set-response-headers-route",
    "title": "Set Response Headers (Per Route)",
    "path": "/routes/headers#set-response-headers",
    "services": [],
    "type": "map of strings key value pairs"
  },
  "jwt-claim-headers": {
    "id": "jwt-claim-headers",
    "title": "JWT Claim Headers",
    "path": "/jwt-claim-headers",
    "description": "The JWT Claim Headers setting allows you to pass specific user session data to upstream applications as HTTP request headers and additional JWT claims.",
    "services": [],
    "type": "slice of string"
  },
  "override-certificate-name": {
    "id": "override-certificate-name",
    "title": "Override Certificate Name",
    "path": "/override-certificate-name",
    "description": "Secure service communication can fail if the external certificate does not match the internally routed service hostname/SNI.",
    "services": [],
    "type": "string"
  },
  "programmatic-redirect-domain-whitelist": {
    "id": "programmatic-redirect-domain-whitelist",
    "title": "Programmatic Redirect Domain Whitelist",
    "path": "/programmatic-redirect-domain-whitelist",
    "services": [],
    "type": "array of string"
  },
  "x-forwarded-for-http-header": {
    "id": "x-forwarded-for-http-header",
    "title": "X-Forwarded-For HTTP Header",
    "path": "/x-forwarded-for-http-header",
    "description": "Do not append proxy IP address to x-forwarded-for (https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers.html?highlight=skip_xff_append#x-forwarded-for).",
    "services": [],
    "type": "bool"
  },
  "the-number-of-trusted-hops": {
    "id": "the-number-of-trusted-hops",
    "title": "The number of trusted hops",
    "path": "the-number-of-trusted-hops",
    "description": "The number of trusted reverse proxies in front of pomerium.",
    "services": [],
    "type": "uint32"
  },
  "codec-type": {
    "id": "codec-type",
    "title": "Codec Type",
    "path": "/codec-type",
    "services": [],
    "type": "string"
  },
  "data-broker-internal-service-url": {
    "id": "data-broker-internal-service-url",
    "title": "Databroker Internal Service URL",
    "path": "/databroker",
    "services": [],
    "type": "URL"
  },
  "data-broker-storage-type": {
    "id": "data-broker-storage-type",
    "title": "Databroker Storage Type",
    "path": "/databroker",
    "services": [],
    "type": "string"
  },
  "data-broker-storage-connection-string": {
    "id": "data-broker-storage-connection-string",
    "title": "Databroker Storage Connection String",
    "path": "/databroker",
    "services": [],
    "type": "string"
  },
  "data-broker-storage-certificate-file": {
    "id": "data-broker-storage-certificate-file",
    "title": "Databroker Storage Certificate File",
    "path": "/databroker",
    "services": [],
    "type": "relative file location"
  },
  "data-broker-storage-certificate-key-file": {
    "id": "data-broker-storage-certificate-key-file",
    "title": "Databroker Storage Certificate Key File",
    "path": "/databroker",
    "services": [],
    "type": "relative file location"
  },
  "data-broker-storage-certificate-authority": {
    "id": "data-broker-storage-certificate-authority",
    "title": "Databroker Storage Certificate Authority",
    "path": "/databroker",
    "services": [],
    "type": "relative file location"
  },
  "data-broker-storage-tls-skip-verify": {
    "id": "data-broker-storage-tls-skip-verify",
    "title": "Databroker Storage TLS Skip Verify",
    "path": "/databroker",
    "services": [],
    "type": "bool"
  },
  "allow-any-authenticated-user": {
    "id": "allow-any-authenticated-user",
    "title": "Allow Any Authenticated User",
    "path": "/routes/allow-any-authenticated-user",
    "services": ["proxy"],
    "type": "bool"
  },
  "cluster-name": {
    "id": "cluster-name",
    "title": "Cluster Name",
    "path": "/routes/cluster-name",
    "services": ["proxy"],
    "type": "string"
  },
  "cors-preflight": {
    "id": "cors-preflight",
    "title": "CORS Preflight",
    "path": "/routes/cors-preflight",
    "services": ["proxy"],
    "type": "bool"
  },
  "databroker-settings": {
    "id": "databroker",
    "title": "Databroker Settings",
    "path": "/databroker",
    "services": ["databroker"]
  },
  "enable-google-cloud-serverless-authentication": {
    "id": "enable-google-cloud-serverless-authentication",
    "title": "Enable Google Cloud Serverless Authentication",
    "short_description": "Enables sending a signed Authorization Header to upstream GCP services",
    "path": "/routes/enable-google-cloud-serverless-authentication",
    "services": ["proxy"],
    "type": "bool"
  },
  "error-message-header": {
    "id": "error-message-first-paragraph",
    "title": "Error Message Header",
    "path": "/branding",
    "description": "A paragraph that will appear on all Route Error Pages in the top section.",
    "short_description": "Can contain plain text or Markdown.",
    "services": [],
    "type": "string"
  },
  "favicon-url": {
    "id": "favicon-url",
    "title": "Favicon Url",
    "path": "/branding",
    "description": "A Url pointing to your favicon. Defaults to Pomerium's Favicon.",
    "services": [],
    "type": "URL"
  },
  "from": {
    "id": "from",
    "title": "From",
    "path": "/routes/from",
    "services": ["proxy"],
    "short_description": "The externally accessible URL for the proxied request",
    "type": "URL",
    "description": "URL (must contain a scheme and hostname, must not contain a path)"
  },
  "health-checks": {
    "id": "health-checks",
    "title": "Health Checks",
    "path": "/routes/load-balancing#health-checks",
    "services": ["proxy"],
    "type": "array of objects"
  },
  "headers-settings": {
    "id": "headers-settings",
    "title": "Headers Settings",
    "path": "/routes/headers"
  },
  "host-rewrite": {
    "id": "host-rewrite",
    "title": "Host Rewrite",
    "path": "/routes/headers#host-rewrite",
    "services": ["proxy"],
    "type": "string"
  },
  "idle-timeout": {
    "id": "idle-timeout",
    "title": "Idle Timeout",
    "path": "/routes/idle-timeout",
    "services": ["proxy"],
    "type": "duration"
  },
  "identity-provider-client-id-per-route": {
    "id": "identity-provider-client-id-per-route",
    "title": "Identity Provider Client ID (per route)",
    "path": "/routes/identity-provider-client-id-per-route",
    "services": ["proxy"],
    "type": "string"
  },
  "identity-provider-client-secret-per-route": {
    "id": "identity-provider-client-secret-per-route",
    "title": "Identity Provider Client Secret (per route)",
    "path": "/routes/identity-provider-client-secret-per-route",
    "services": ["proxy"],
    "type": "string"
  },
  "kubernetes-service-account-token": {
    "id": "kubernetes-service-account-token",
    "title": "Kubernetes Service Account Token",
    "path": "/routes/kubernetes-service-account-token",
    "services": ["proxy"],
    "short_description": "string or relative file location containing a Kubernetes bearer token",
    "type": "string"
  },
  "load-balancing-settings": {
    "id": "load-balancing-settings",
    "title": "Load Balancing Settings",
    "path": "/routes/load-balancing"
  },
  "load-balancing-policy": {
    "id": "load-balancing-policy",
    "title": "Load Balancing Policy",
    "path": "/routes/load-balancing#load-balancing-policy",
    "services": ["proxy"],
    "type": "enum"
  },
  "load-balancing-policy-config": {
    "id": "load-balancing-policy-config",
    "title": "Load Balancing Policy Config",
    "path": "/routes/load-balancing-policy-config",
    "services": ["proxy"],
    "type": "object"
  },
  "logo-url": {
    "id": "logo-url",
    "title": "Logo Url",
    "path": "/branding",
    "description": "A Url pointing to your logo. Defaults to Pomerium's Logo.",
    "services": [],
    "type": "URL"
  },
  "outlier-detection": {
    "id": "outlier-detection",
    "title": "Outlier Detection",
    "path": "/routes/outlier-detection",
    "services": ["proxy"],
    "type": "object"
  },
  "pass-identity-headers": {
    "id": "pass-identity-headers",
    "title": "Pass Identity Headers",
    "short_description": "Pass identity headers to upstream applications",
    "path": "/routes/pass-identity-headers",
    "services": ["proxy"],
    "type": "bool"
  },
  "path-matching-settings": {
    "id": "path-matching",
    "title": "Path Matching Settings",
    "path": "/routes/path-matching",
    "services": ["proxy"],
    "description": "Configure Path Matching settings in Pomerium.",
    "type": "string"
  },
  "path": {
    "id": "path",
    "title": "Path",
    "path": "/routes/path-matching#path",
    "services": ["proxy"],
    "short_description": "Only match requests with an exact match for this path",
    "type": "string"
  },
  "prefix": {
    "id": "prefix",
    "title": "Prefix",
    "path": "/routes/path-matching#prefix",
    "services": ["proxy"],
    "short_description": "Only match requests with paths starting with this prefix",
    "type": "string"
  },
  "path-rewriting-settings": {
    "id": "path-rewriting-settings",
    "title": "Path Rewriting Settings",
    "path": "/routes/path-rewriting",
    "services": ["proxy"],
    "description": "Configure Path Rewriting settings in Pomerium.",
    "type": "string"
  },
  "prefix-rewrite": {
    "id": "prefix-rewrite",
    "title": "Prefix Rewrite",
    "path": "/routes/path-rewriting#prefix-rewrite",
    "services": ["proxy"],
    "short_description": "Swaps the matched prefix (previous section) with this value",
    "type": "string"
  },
  "primary-color": {
    "id": "primary-color",
    "title": "Primary Color",
    "path": "/branding",
    "description": "A hex code that determines the primary color for the Enterprise Console and Route Error Details pages.",
    "short_description": "Defaults to #6F43E7",
    "services": [],
    "type": "string"
  },
  "primary-color-dark-mode": {
    "id": "darkmode-primary-color",
    "title": "Primary Color (Dark Mode)",
    "path": "/branding",
    "description": "A hex code that determines the primary color for the Enterprise Console and Route Error Details pages when in Dark Mode.",
    "short_description": "Defaults to #6F43E7",
    "services": [],
    "type": "string"
  },
  "public-access": {
    "id": "public-access",
    "title": "Public Access",
    "path": "/routes/public-access",
    "services": ["proxy"],
    "type": "bool"
  },
  "redirect": {
    "id": "redirect",
    "title": "Redirect",
    "path": "/routes/redirect",
    "services": ["proxy"],
    "type": "object"
  },
  "regex": {
    "id": "regex",
    "title": "Regex",
    "path": "/routes/path-matching#regex",
    "services": ["proxy"],
    "type": "regular expression"
  },
  "regex-priority-order": {
    "id": "regex-priority-order",
    "title": "Regex Priority Order",
    "path": "/routes/regex-priority-order",
    "services": ["proxy"],
    "description": "When a regex is used as part of the path then the order a route will be evaluated can be arbitrary. This allows you to put an integer value to prioritize route evaluation.",
    "type": "uint32"
  },
  "regex-rewrite": {
    "id": "regex-rewrite",
    "title": "Regex Rewrite",
    "path": "/routes/path-rewriting#regex-rewrite",
    "services": ["proxy"],
    "short_description": "Rewrites the URL path according to this pattern",
    "type": "string"
  },
  "regex-rewrite-substitution": {
    "id": "regex-rewrite-substitution",
    "title": "Regex Rewrite Substitution",
    "path": "/routes/path-rewriting#regex-rewrite",
    "short_description": "Paths matching the pattern above will be replaced with this",
    "enterpriseOnly": true
  },
  "remove-request-headers": {
    "id": "remove-request-headers",
    "title": "Remove Request Headers",
    "path": "/routes/headers#remove-request-headers",
    "services": ["proxy"],
    "type": "array of strings"
  },
  "rewrite-response-headers": {
    "id": "rewrite-response-headers",
    "title": "Rewrite Response Headers",
    "path": "/routes/headers#rewrite-response-headers",
    "services": ["proxy"],
    "type": "object"
  },
  "route-timeout": {
    "id": "route-timeout",
    "title": "Route Timeout",
    "path": "/routes/route-timeout",
    "services": ["proxy"],
    "type": "duration"
  },
  "secondary-color": {
    "id": "secondary-color",
    "title": "Secondary Color",
    "description": "A hex code that determines the secondary color for the Enterprise Console and Route Error Details pages.",
    "path": "/branding",
    "short_description": "Defaults to #49AAA1",
    "services": [],
    "type": "string"
  },
  "secondary-color-dark-mode": {
    "id": "darkmode-secondary-color",
    "title": "Secondary Color (Dark Mode)",
    "description": "A hex code that determines the secondary color for the Enterprise Console and Route Error Details pages when in Dark Mode.",
    "short_description": "Defaults to #49AAA1",
    "path": "/branding",
    "services": [],
    "type": "string"
  },
  "set-authorization-header": {
    "id": "set-authorization-header",
    "title": "Set Authorization Header",
    "path": "/routes/headers#set-authorization-header",
    "services": ["proxy"],
    "type": "enum",
    "short_description": "pass_through, access_token or id_token"
  },
  "set-request-headers": {
    "id": "set-request-headers",
    "title": "Set Request Headers",
    "path": "/routes/headers#set-request-headers",
    "services": ["proxy"],
    "type": "map of strings key value pairs"
  },
  "show-error-details": {
    "id": "show-error-details",
    "title": "Show Error Details",
    "description": "If set, will show error details including policies explanations and remediation on the 403 unauthorized page.",
    "path": "/routes/show-error-details",
    "services": [],
    "type": "bool"
  },
  "signout-redirect-url": {
    "id": "signout-redirect-url",
    "title": "Signout Redirect URL",
    "path": "/signout-redirect-url",
    "services": ["proxy"],
    "type": "URL"
  },
  "tls-settings": {
    "id": "tls-settings",
    "title": "TLS Settings",
    "path": "/routes/tls",
    "services": ["proxy"],
    "type": "string"
  },
  "tls-client-certificate": {
    "id": "tls-client-certificate",
    "title": "TLS Client Certificate",
    "path": "/routes/tls#tls-client-certificate",
    "services": ["proxy"],
    "type": "string"
  },
  "tls-custom-certificate-authority": {
    "id": "tls-custom-certificate-authority",
    "title": "TLS Custom Certificate Authority",
    "path": "/routes/tls#tls-custom-certificate-authority",
    "services": ["proxy"]
  },
  "tls-downstream-client-certificate-authority": {
    "id": "tls-downstream-client-certificate-authority",
    "title": "TLS Downstream Client Certificate Authority",
    "path": "/tls#tls-downstream-client-certificate-authority",
    "services": ["proxy"]
  },
  "tls-skip-verification": {
    "id": "tls-skip-verification",
    "title": "TLS Skip Verification",
    "path": "/routes/tls#tls-skip-verification",
    "services": ["proxy"],
    "type": "bool"
  },
  "tls-upstream-allow-renegotiation": {
    "id": "tls-upstream-allow-renegotiation",
    "title": "TLS Upstream Allow Renegotiation",
    "path": "/routes/tls#tls-upstream-allow-renegotiation",
    "services": ["proxy"],
    "type": "bool"
  },
  "tls-upstream-server-name": {
    "id": "tls-upstream-server-name",
    "title": "TLS Upstream Server Name",
    "path": "/routes/tls#tls-upstream-server-name",
    "services": [],
    "type": "string"
  },
  "tls-downstream-server-name": {
    "id": "tls-downstream-server-name",
    "title": "TLS Downstream Server Name",
    "path": "/routes/tls#tls-downstream-server-name",
    "services": [],
    "type": "string"
  },
  "to": {
    "id": "to",
    "title": "To",
    "path": "/routes/to",
    "services": ["proxy"],
    "description": "The destination(s) of a proxied request",
    "type": "URL(s)",
    "short_description": "URL(s) must contain a scheme and hostname, with an optional weight"
  },
  "spdy": {
    "id": "spdy",
    "title": "SPDY",
    "path": "/routes/spdy",
    "services": ["proxy"],
    "type": "bool"
  },
  "websocket-connections": {
    "id": "websocket-connections",
    "title": "Websocket Connections",
    "path": "/routes/websocket-connections",
    "services": ["proxy"],
    "type": "bool"
  },
  "google-cloud-serverless-authentication-service-account": {
    "id": "google-cloud-serverless-authentication-service-account",
    "title": "Google Cloud Serverless Authentication Service Account",
    "path": "/google-cloud-serverless-authentication-service-account",
    "services": ["authorize"],
    "type": "string",
    "short_description": "Base64 encoded string"
  },
  "signing-key": {
    "id": "signing-key",
    "title": "Signing Key",
    "path": "/signing-key",
    "description": "Signing Key is the key used to sign a user's attestation JWT which can be consumed by upstream applications to pass along identifying user information like username, id, and groups.",
    "services": [],
    "type": "string",
    "short_description": "Base64 encoded string"
  },
  "signing-key-file": {
    "id": "signing-key-file",
    "title": "Signing Key File",
    "path": "/signing-key-file",
    "description": "File path to a secret containing the signing key, used to sign a user's attestation JWT which can be consumed by upstream applications to pass along identifying user information like username, id, and groups.",
    "services": [],
    "type": "string",
    "short_description": "File path containing a Base64 encoded string"
  },
  "signout-redirect-url": {
    "id": "signout-redirect-url",
    "title": "Signout Redirect URL",
    "path": "/signout-redirect-url",
    "services": ["proxy"],
    "type": "URL"
  },
  "devices": {
    "id": "devices",
    "title": "Devices",
    "description": "Introduced in v0.16.0, the Manage Devices page lets administrators manage user devices for policy-based authorization.",
    "path": "/../enterprise/reference/manage#devices",
    "enterpriseOnly": true
  },
  "manage-devices": {
    "title": "Manage Devices",
    "id": "manage-devices",
    "path": "/../capabilities/device-identity",
    "enterpriseOnly": true
  },
  "new-enrollment": {
    "id": "new-enrollment",
    "title": "New Enrollment",
    "path": "/../capabilities/device-identity#new-enrollment",
    "enterpriseOnly": true
  },
  "migrate-routes": {
    "id": "migrate-routes",
    "title": "Migrate Routes",
    "description": "A way to migrate routes from an existing Open Source Pomerium config file. You probably only want to do this once.",
    "enterpriseOnly": true
  },
  "search-users": {
    "id": "search-users",
    "title": "Search Users",
    "description": "New Enrollment URLs are only valid for the specified user.",
    "path": "/../capabilities/device-identity#new-enrollment",
    "enterpriseOnly": true
  },
  "redirect-url": {
    "id": "redirect-url",
    "title": "Redirect URL",
    "path": "/../capabilities/device-identity#create-an-enrollment-link",
    "description": "Optional: The URL the user will be taken to after device enrollment is successful.",
    "enterpriseOnly": true
  },
  "enrollment-type": {
    "id": "enrollment-type",
    "title": "Enrollment Type",
    "description": "Specify if the user can enroll any device identity, or restrict it to a secure enclave.",
    "path": "/../capabilities/device-identity#new-enrollment",
    "enterpriseOnly": true
  }
}
