{
  "access-log-fields": {
    "description": "Displays HTTP request logs from the Pomerium Proxy service.",
    "id": "access-log-fields",
    "path": "/access-log-fields",
    "services": ["proxy"],
    "short_description": "",
    "title": "Access Log Fields",
    "type": "string"
  },
  "address": {
    "description": "Specifies the IP Address and Port to serve HTTP requests from.",
    "id": "address",
    "path": "/address",
    "services": ["proxy"],
    "short_description": "",
    "title": "Address",
    "type": "string"
  },
  "allow-any-authenticated-user": {
    "description": "Allows all requests for any authenticated user or service account. Use with caution.",
    "id": "allow-any-authenticated-user",
    "path": "/routes/allow-any-authenticated-user",
    "services": ["proxy"],
    "title": "Allow Any Authenticated User",
    "type": "bool"
  },
  "authenticate-internal-service-url": {
    "id": "authenticate-internal-service-url",
    "path": "/service-urls#authenticate-internal-service-url",
    "services": [],
    "title": "Authenticate Internal Service URL",
    "type": "URL"
  },
  "authenticate-service-url": {
    "description": "The externally accessible URL for the authenticate service.",
    "id": "authenticate-service-url",
    "path": "/service-urls#authenticate-service-url",
    "services": ["proxy", "authenticate", "authorize"],
    "short_description": "",
    "title": "Authenticate Service URL",
    "type": "URL"
  },
  "authorize-internal-service-url": {
    "id": "authorize-internal-service-url",
    "path": "/service-urls#authorize-internal-service-url",
    "services": [],
    "title": "Authorize Internal Service URL",
    "type": "URL"
  },
  "authorize-log-fields": {
    "description": "Displays HTTP request logs from the Pomerium Authorize service.",
    "id": "authorize-log-fields",
    "path": "/authorize-log-fields",
    "services": ["authorize"],
    "short_description": "",
    "title": "Authorize Log Fields",
    "type": "string"
  },
  "authorize-service-url": {
    "description": "Authorize Service URL is the location of the internally accessible Authorize service.",
    "id": "authorize-service-url",
    "path": "/service-urls#authorize-service-url",
    "services": [],
    "title": "Authorize Service URL",
    "type": "URL"
  },
  "autocert": {
    "description": "Turning on autocert allows Pomerium to automatically retrieve, manage, and renew public facing TLS certificates from Lets Encrypt.",
    "id": "autocert",
    "path": "/autocert#autocert",
    "services": ["authenticate", "proxy"],
    "short_description": "",
    "title": "Autocert",
    "type": "bool"
  },
  "autocert-ca": {
    "description": "Autocert CA is the directory URL of the ACME CA to use when requesting certificates.",
    "id": "autocert-ca",
    "path": "/autocert#autocert-ca",
    "services": ["authenticate", "proxy"],
    "short_description": "",
    "title": "Autocert CA",
    "type": ""
  },
  "autocert-directory": {
    "description": "Autocert directory is the path which Autocert will store x509 certificate data.",
    "id": "autocert-directory",
    "path": "/autocert#autocert-directory",
    "services": ["authenticate", "proxy"],
    "short_description": "",
    "title": "Autocert Directory",
    "type": "string"
  },
  "autocert-eab-key-id": {
    "description": "Autocert EAB Key ID is the key identifier when requesting a certificate from a CA with External Account Binding enabled.",
    "id": "autocert-eab-key-id",
    "path": "/autocert#autocert-eab-key-id",
    "services": ["authenticate", "proxy"],
    "short_description": "",
    "title": "Autocert EAB Key ID",
    "type": "string"
  },
  "autocert-eab-mac-key": {
    "description": "Autocert EAB MAC Key is the base64, url-encoded secret key corresponding to the Autocert EAB Key ID.",
    "id": "autocert-eab-mac-key",
    "path": "/autocert#autocert-eab-mac-key",
    "services": ["authenticate", "proxy"],
    "short_description": "",
    "title": "Autocert EAB MAC Key",
    "type": "string"
  },
  "autocert-email": {
    "description": "Autocert Email is the email address to use when requesting certificates from an ACME CA.",
    "id": "autocert-email",
    "path": "/autocert#autocert-email",
    "services": ["authenticate", "proxy"],
    "short_description": "",
    "title": "Autocert Email",
    "type": "email"
  },
  "autocert-must-staple": {
    "id": "autocert-must-staple",
    "path": "/autocert#autocert-must-staple",
    "services": ["authenticate", "proxy"],
    "short_description": "",
    "title": "Autocert Must-Staple",
    "type": "bool"
  },
  "autocert-trusted-certificate-authority": {
    "id": "autocert-trusted-certificate-authority",
    "path": "/autocert#autocert-trusted-certificate-authority",
    "services": ["authenticate", "proxy"],
    "short_description": "",
    "title": "Autocert Trusted Certificate Authority",
    "type": "string"
  },
  "autocert-use-staging": {
    "description": "Autocert Use Staging setting allows you to use Let's Encrypt's staging environment, which has more lenient usage limits than the production environment.",
    "id": "autocert-use-staging",
    "path": "/autocert#autocert-use-staging",
    "services": ["authenticate", "proxy"],
    "short_description": "",
    "title": "Autocert Use Staging",
    "type": "bool"
  },
  "bearer-token-format": {
    "description": "Bearer Token Format controls how HTTP bearer token authentication is handled.",
    "id": "bearer-token-format",
    "path": "/bearer-token-format",
    "services": ["authorize", "proxy"],
    "short_description": "Bearer Token Format controls how HTTP bearer token authentication is handled.",
    "title": "Bearer Token Format",
    "type": "string"
  },
  "branding-settings": {
    "id": "branding",
    "path": "/branding",
    "short_description": "",
    "title": "Branding Settings",
    "type": "string"
  },
  "certificate-authority": {
    "description": "",
    "id": "certificate-authority",
    "path": "/certificates#certificate-authority",
    "services": [],
    "title": "Certificates Authority",
    "type": "string"
  },
  "certificates": {
    "id": "certificates",
    "path": "/certificates",
    "services": [],
    "short_description": "",
    "title": "Certificates Settings",
    "type": "string"
  },
  "cluster-identity": {
    "description": "The cluster token that associates this cluster with a personal account or organization.",
    "id": "cluster-identity",
    "title": "Cluster Identity"
  },
  "cluster-name": {
    "id": "cluster-name",
    "path": "/routes/cluster-name",
    "services": ["proxy"],
    "title": "Cluster Name",
    "type": "string"
  },
  "cluster-settings-name": {
    "description": "A customizable name that identifies a cluster. Defaults to the cluster's randomly generated starter domain name.",
    "id": "cluster-settings-name",
    "title": "Cluster Name"
  },
  "cluster-starter-domain": {
    "description": "The randomly generated starter domain assigned to this cluster. This domain is not changeable, and is designed to be used as a proof of concept.",
    "id": "cluster-starter-domain",
    "title": "Cluster Starter Domain"
  },
  "codec-type": {
    "id": "codec-type",
    "path": "/codec-type",
    "services": [],
    "title": "Codec Type",
    "type": "string"
  },
  "cookie-same-site": {
    "description": "Sets the SameSite Cookie Option.",
    "id": "cookie-same-site",
    "path": "/cookies#cookie-samesite",
    "services": [],
    "short_description": "",
    "title": "Same Site",
    "type": "string"
  },
  "cookies-settings": {
    "id": "cookies",
    "path": "/cookies",
    "services": [],
    "title": "Cookies Settings",
    "type": "string"
  },
  "cors-preflight": {
    "description": "Allows unauthenticated HTTP OPTIONS requests.",
    "id": "cors-preflight",
    "path": "/routes/cors-preflight",
    "services": ["proxy"],
    "title": "CORS Preflight",
    "type": "bool"
  },
  "custom-domains": {
    "description": "A custom wildcard subdomain used to define routes in this cluster. Can only be associated with 1 cluster.",
    "id": "custom-domains",
    "path": "/../capabilities/custom-domains",
    "title": "Custom Domains"
  },
  "data-broker-internal-service-url": {
    "id": "data-broker-internal-service-url",
    "path": "/service-urls#databroker-internal-service-url",
    "services": [],
    "title": "Databroker Internal Service URL",
    "type": "URL"
  },
  "data-broker-service": {
    "id": "data-broker-service",
    "path": "/databroker#databroker-service",
    "services": ["databroker"],
    "title": "Databroker Service"
  },
  "data-broker-service-url": {
    "id": "data-broker-service-url",
    "path": "/service-urls#databroker-service-url",
    "services": [],
    "title": "Databroker Service URL",
    "type": "URL"
  },
  "data-broker-storage-connection-string": {
    "description": "Sets the database connection string to connect Databroker service to storage backend.",
    "id": "data-broker-storage-connection-string",
    "path": "/databroker#databroker-storage-connection-string",
    "services": [],
    "title": "Databroker Storage Connection String",
    "type": "string"
  },
  "data-broker-storage-type": {
    "id": "data-broker-storage-type",
    "path": "/databroker#databroker-storage-type",
    "services": [],
    "title": "Databroker Storage Type",
    "type": "string"
  },
  "databroker-settings": {
    "id": "databroker",
    "path": "/databroker",
    "services": ["databroker"],
    "title": "Databroker Settings"
  },
  "default-upstream-timeout": {
    "description": "Sets the default timeout applied to a proxied route when no timeout key is specified by the policy.",
    "id": "default-upstream-timeout",
    "path": "/default-upstream-timeout",
    "services": [],
    "title": "Default Upstream Timeout",
    "type": ""
  },
  "description": {
    "description": "Description of the route.",
    "id": "description",
    "path": "/routes/description",
    "services": ["proxy"],
    "title": "Description",
    "type": "string"
  },
  "detected-ip-address": {
    "description": "The IP address detected for this cluster server.",
    "id": "detected-ip-address",
    "title": "Detected IP Address"
  },
  "devices": {
    "description": "Introduced in v0.16.0, the Manage Devices page lets administrators manage user devices for policy-based authorization.",
    "enterpriseOnly": true,
    "id": "devices",
    "path": "/../enterprise/reference/manage#devices",
    "title": "Devices"
  },
  "direct-response": {
    "description": "Instructs Pomerium to send a static HTTP response to the downstream client for a managed route.",
    "id": "direct-response",
    "path": "/routes/direct-response",
    "services": ["proxy"],
    "title": "Direct Response"
  },
  "dns-lookup-family": {
    "description": "Sets the DNS IP address resolution policy.",
    "id": "dns-lookup-family",
    "path": "/dns-lookup-family",
    "services": [],
    "title": "DNS Lookup Family",
    "type": "string"
  },
  "downstream-mtls-client-certificate-authority": {
    "description": "A bundle of PEM-encoded X.509 certificates that will be treated as trust anchors when verifying client certificates",
    "id": "downstream-mtls-client-certificate-authority",
    "path": "/downstream-mtls-settings#ca",
    "short_description": "",
    "title": "Downstream mTLS Certificate Authority",
    "type": "string"
  },
  "downstream-mtls-crl": {
    "description": "A bundle of PEM-encoded certificate revocation lists to be consulted during certificate validation.",
    "id": "downstream-mtls-crl",
    "path": "/downstream-mtls-settings#crl",
    "short_description": "",
    "title": "Downstream mTLS Certificate Revocation List",
    "type": "string"
  },
  "downstream-mtls-enforcement": {
    "description": "Controls Pomerium's behavior when a client does not present a trusted client certificate.",
    "id": "downstream-mtls-enforcement",
    "path": "/downstream-mtls-settings#enforcement-mode",
    "short_description": "",
    "title": "Downstream mTLS Enforcement Mode",
    "type": "string"
  },
  "downstream-mtls-match-subject-alt-names": {
    "description": "Require that each certificate contain a certain type of SAN.",
    "id": "downstream-mtls-match-subject-alt-names",
    "path": "/downstream-mtls-settings#match-sans",
    "short_description": "",
    "title": "Downstream mTLS Match SANs",
    "type": "string"
  },
  "downstream-mtls-max-verify-depth": {
    "description": "Sets a limit on the depth of a certificate chain presented by the client.",
    "id": "downstream-mtls-max-verify-depth",
    "path": "/downstream-mtls-settings#max-verify-depth",
    "short_description": "",
    "title": "Downstream mTLS Max Verify Depth",
    "type": "string"
  },
  "downstream-mtls-settings": {
    "description": "Manage client certificate requirements for end users connecting to Pomerium-managed routes with downstream mTLS settings.",
    "id": "downstream-mtls-settings",
    "path": "/downstream-mtls-settings",
    "title": "Downstream mTLS Settings"
  },
  "enable-google-cloud-serverless-authentication": {
    "id": "enable-google-cloud-serverless-authentication",
    "path": "/routes/enable-google-cloud-serverless-authentication",
    "services": ["proxy"],
    "short_description": "",
    "title": "Enable Google Cloud Serverless Authentication",
    "type": "bool"
  },
  "enrollment-type": {
    "description": "Specify if the user can enroll any device identity, or restrict it to a secure enclave.",
    "enterpriseOnly": true,
    "id": "enrollment-type",
    "path": "/../capabilities/device-identity#new-enrollment",
    "title": "Enrollment Type"
  },
  "envoy-bootstrap-options": {
    "id": "envoy-bootstrap-options",
    "path": "/envoy-bootstrap-options",
    "services": [],
    "title": "Envoy Bootstrap Options",
    "type": "string"
  },
  "error-message-header": {
    "description": "A paragraph that will appear on all Route Error Pages in the top section.",
    "id": "error-message-first-paragraph",
    "path": "/branding#error-message-header",
    "services": [],
    "short_description": "",
    "title": "Error Message Header",
    "type": "string"
  },
  "expires": {
    "description": "Sets the lifetime of session cookies. After this interval, users must reauthenticate.",
    "id": "expiration",
    "path": "/cookies#cookie-expiration",
    "services": [],
    "short_description": "",
    "title": "Expiration",
    "type": "datetime"
  },
  "ext-data-client-tls-key": {
    "enterpriseOnly": true,
    "id": "ext-data-client-tls-key",
    "path": "/../integrations#client-tls-key",
    "title": "Client TLS Key"
  },
  "ext-data-foreign-key": {
    "description": "Associates this key from a request to the external data",
    "enterpriseOnly": true,
    "id": "ext-data-foreign-key",
    "path": "/../integrations#foreign-key",
    "title": "Foreign Key"
  },
  "ext-data-headers": {
    "description": "Used when requesting the external dataset",
    "enterpriseOnly": true,
    "id": "ext-data-headers",
    "path": "/../integrations#headers",
    "title": "External Data Request Headers"
  },
  "ext-data-insecure-tls": {
    "enterpriseOnly": true,
    "id": "ext-data-insecure-tls",
    "path": "/../integrations#allow-insecure-tls",
    "title": "Allow Insecure TLS"
  },
  "ext-data-polling": {
    "enterpriseOnly": true,
    "id": "ext-data-polling",
    "path": "/../integrations#polling-minmax-delay",
    "title": "Polling Min / Max Delay"
  },
  "ext-data-record-type": {
    "description": "Overridden by the directory structure of an archive file dataset",
    "enterpriseOnly": true,
    "id": "ext-data-record-type",
    "path": "/../integrations#record-type",
    "title": "External Data Record Type"
  },
  "ext-data-url": {
    "description": "URL to the external dataset",
    "enterpriseOnly": true,
    "id": "ext-data-url",
    "path": "/../integrations#url",
    "title": "External Data URL"
  },
  "favicon-url": {
    "description": "A Url pointing to your favicon. Defaults to Pomerium's Favicon.",
    "id": "favicon-url",
    "path": "/branding#favicon-url",
    "services": [],
    "title": "Favicon Url",
    "type": "URL"
  },
  "from": {
    "description": "The external URL for a proxied request. Must contain a scheme and Hostname, must not contain a path.",
    "id": "from",
    "path": "/routes/from",
    "services": ["proxy"],
    "short_description": "",
    "title": "From",
    "type": "URL"
  },
  "global-timeouts": {
    "description": "Timeouts set the global server timeouts. Timeouts can also be set for individual routes.",
    "id": "global-timeouts",
    "path": "/global-timeouts",
    "services": [],
    "title": "Global Timeouts",
    "type": ""
  },
  "google-cloud-serverless-authentication-service-account": {
    "id": "google-cloud-serverless-authentication-service-account",
    "path": "/google-cloud-serverless-authentication-service-account",
    "services": ["authorize"],
    "short_description": "",
    "title": "Google Cloud Serverless Authentication Service Account",
    "type": "string"
  },
  "grpc-address": {
    "description": "Address specifies the host and port to serve GRPC requests from.",
    "id": "grpc-address",
    "path": "/grpc#grpc-address",
    "services": [],
    "title": "gRPC Address",
    "type": "string"
  },
  "grpc-client-timeout": {
    "id": "grpc-client-timeout",
    "path": "/grpc#grpc-client-timeout",
    "services": [],
    "title": "gRPC Client Timeout",
    "type": ""
  },
  "grpc-health-check-authority": {
    "description": "Specifies the ':authority' header value in a gRPC health check request. Optional.",
    "id": "grpc-health-check-authority",
    "path": "/routes/load-balancing#grpc-healthcheck-overview",
    "title": "gRPC Health Check Authority",
    "type": "string"
  },
  "grpc-health-check-service-name": {
    "description": "Specifies the service name parameter sent to the gRPC service. Optional.",
    "id": "grpc-health-check-service-name",
    "path": "/routes/load-balancing#grpc-healthcheck-overview",
    "title": "gRPC Health Check Service Name",
    "type": "string"
  },
  "grpc-insecure": {
    "description": "If set, GRPC Insecure disables transport security for communication between the proxy and authorize components.",
    "id": "grpc-insecure",
    "path": "/grpc#grpc-insecure",
    "services": [],
    "title": "gRPC Insecure",
    "type": "bool"
  },
  "grpc-settings": {
    "description": "Configure gRPC configuration settings in Pomerium.",
    "id": "grpc-settings",
    "path": "/grpc",
    "services": [],
    "title": "gRPC Settings",
    "type": "string"
  },
  "headers-settings": {
    "id": "headers-settings",
    "path": "/routes/headers",
    "title": "Headers Settings"
  },
  "health-checks": {
    "description": "Issues periodic health check requests to upstream servers. Unhealthy servers won't serve traffic.",
    "id": "health-checks",
    "path": "/routes/load-balancing#health-checks",
    "services": ["proxy"],
    "title": "Health Checks",
    "type": "array of objects"
  },
  "health-checks-healthy-threshold": {
    "description": "The number of healthy health checks required before a host is marked healthy. Required.",
    "id": "http-health-check-healthy-threshold",
    "path": "/routes/load-balancing#supported-health-checks-parameters",
    "title": "Health Checks Healthy Threshold",
    "type": "UInt32Value"
  },
  "health-checks-interval": {
    "description": "The interval between health checks. Required.",
    "id": "http-health-check-interval",
    "path": "/routes/load-balancing#supported-health-checks-parameters",
    "title": "Health Checks Interval",
    "type": "duration"
  },
  "health-checks-timeout": {
    "description": "The total time to wait for a health check response. Required.",
    "id": "http-health-check-timeout",
    "path": "/routes/load-balancing#supported-health-checks-parameters",
    "title": "Health Checks Timeout",
    "type": "duration"
  },
  "health-checks-unhealthy-threshold": {
    "description": "The number of unhealthy health checks required before a host is marked unhealthy. Required.",
    "id": "http-health-check-unhealthy-threshold",
    "path": "/routes/load-balancing#supported-health-checks-parameters",
    "title": "Health Checks Unhealthy Threshold",
    "type": "UInt32Value"
  },
  "host-path-rewrite-header": {
    "description": "Rewrites the Host header according to a regular expression matching the path.",
    "id": "host-path-rewrite-header",
    "path": "/routes/headers#4-host-path-regex-rewrite-patternsubstitution",
    "services": ["proxy"],
    "title": "Host Path Rewrite Header",
    "type": "string"
  },
  "host-path-rewrite-substitution": {
    "description": "Rewrites the Host header according to a regular expression matching the substitution.",
    "id": "host-path-rewrite-substitution",
    "path": "/routes/headers#4-host-path-regex-rewrite-patternsubstitution",
    "services": ["proxy"],
    "title": "Host Path Regex Rewrite Substitution",
    "type": "string"
  },
  "host-redirect": {
    "description": "Swaps the incoming Host with the specified value.",
    "id": "host-redirect",
    "path": "/routes/redirect#redirect-options",
    "title": "Host Redirect",
    "type": "String"
  },
  "host-rewrite": {
    "description": "Rewrites the Host header to a new literal value.",
    "id": "host-rewrite",
    "path": "/routes/headers#2-host-rewrite",
    "services": ["proxy"],
    "title": "Host Rewrite",
    "type": "string"
  },
  "host-rewrite-header": {
    "description": "Rewrites the Host header to match an incoming header value.",
    "id": "host-rewrite-header",
    "path": "/routes/headers#3-host-rewrite-header",
    "services": ["proxy"],
    "title": "Host Rewrite Header",
    "type": "string"
  },
  "http-health-check-codec-client-type": {
    "description": "Specifies which application protocol to use. Optional.",
    "id": "http-health-check-codec-client-type",
    "path": "/routes/load-balancing#http-healthcheck-overview",
    "title": "HTTP Health Check Codec Client Type",
    "type": "CodecClientType"
  },
  "http-health-check-expected-statuses": {
    "description": "Defines a range of HTTP response statuses that are considered healthy. Optional.",
    "id": "http-health-check-expected-statuses",
    "path": "/routes/load-balancing#http-healthcheck-overview",
    "title": "HTTP Health Check Expected Statuses",
    "type": "Int64Range"
  },
  "http-health-check-host": {
    "description": "The Host header value in the HTTP health check request. If empty, the name of the cluster this health check is associated with will be used. Optional.",
    "id": "http-health-check-host",
    "path": "/routes/load-balancing#http-healthcheck-overview",
    "title": "HTTP Health Check Host",
    "type": "string"
  },
  "http-health-check-path": {
    "description": "Specifies the HTTP path requested during a health check. Required.",
    "id": "http-health-check-path",
    "path": "/routes/load-balancing#http-healthcheck-overview",
    "title": "HTTP Health Check Path",
    "type": "string"
  },
  "http-redirect-address": {
    "description": "If set, HTTP Redirect Address specifies the IP Address and Port to redirect HTTP to HTTPS traffic on.",
    "id": "http-redirect-address",
    "path": "/http-redirect-address",
    "services": [],
    "title": "HTTP Redirect Address",
    "type": "string"
  },
  "https-redirect": {
    "description": "Swaps the incoming Scheme with 'https'.",
    "id": "https-redirect",
    "path": "/routes/redirect#redirect-options",
    "title": "HTTPS Redirect",
    "type": "Boolean"
  },
  "identity-provider": {
    "description": "Choose from a list of supported IDPs.",
    "enterpriseOnly": true,
    "id": "identity-provider",
    "path": "/../identity-providers",
    "title": "Identity Provider",
    "type": "string"
  },
  "identity-provider-client-id": {
    "description": "The OAuth 2.0 Client Identifier retrieved from an identity provider.",
    "id": "identity-provider-client-id",
    "path": "/identity-provider-settings#identity-provider-client-id",
    "services": [],
    "title": "Identity Provider Client ID",
    "type": "string"
  },
  "identity-provider-client-id-per-route": {
    "id": "identity-provider-client-id-per-route",
    "path": "/routes/identity-provider-client-id-per-route",
    "services": ["proxy"],
    "title": "Identity Provider Client ID (per route)",
    "type": "string"
  },
  "identity-provider-client-secret": {
    "description": "The OAuth 2.0 Secret Identifier retrieved from an identity provider.",
    "id": "identity-provider-client-secret",
    "path": "/identity-provider-settings#identity-provider-client-secret",
    "services": [],
    "title": "Identity Provider Client Secret",
    "type": "string"
  },
  "identity-provider-client-secret-file": {
    "description": "File path containing the client secret, the OAuth 2.0 Secret Identifier retrieved from your identity provider.",
    "id": "identity-provider-client-secret-file",
    "path": "/identity-provider-settings#identity-provider-client-secret-file",
    "services": [],
    "title": "Identity Provider Client Secret File",
    "type": "string"
  },
  "identity-provider-client-secret-per-route": {
    "id": "identity-provider-client-secret-per-route",
    "path": "/routes/identity-provider-client-secret-per-route",
    "services": ["proxy"],
    "title": "Identity Provider Client Secret (per route)",
    "type": "string"
  },
  "identity-provider-name": {
    "description": "The short-hand name of an OIDC identity provider used for authentication.",
    "id": "identity-provider-name",
    "path": "/identity-provider-settings#identity-provider-name",
    "services": [],
    "title": "Identity Provider Name",
    "type": "string"
  },
  "identity-provider-polling-min-max-delay": {
    "description": "Sets the minimum and maximum delay times between requests to the identity provider directory.",
    "id": "identity-provider-min-max-delay",
    "path": "/identity-provider-settings#identity-provider-polling-minmax-delay",
    "services": [],
    "title": "Identity Provider Min/Max Delay",
    "type": "string"
  },
  "identity-provider-scopes": {
    "description": "IdP scopes correspond to access privilege scopes. For example, 'openid', 'profile', 'email', or 'offline_access'.",
    "id": "identity-provider-scopes",
    "path": "/identity-provider-settings#identity-provider-scopes",
    "services": [],
    "short_description": "",
    "title": "Identity Provider Scopes",
    "type": "comma separated strings"
  },
  "identity-provider-settings": {
    "description": "Configure and self-host your own Identity Provider with Pomerium's Identity Provider settings.",
    "id": "identity-provider-settings",
    "path": "/identity-provider-settings",
    "title": "Identity Provider Settings",
    "type": "string"
  },
  "identity-provider-url": {
    "description": "The base URL to an identity provider's OIDC discovery document.",
    "id": "identity-provider-url",
    "path": "/identity-provider-settings#identity-provider-url",
    "services": [],
    "title": "Identity Provider URL",
    "type": "string"
  },
  "idle-timeout": {
    "description": "Sets the time at which a downstream or upstream connection will be terminated if no active streams.",
    "id": "idle-timeout",
    "path": "/global-timeouts#idle-timeout",
    "services": [],
    "short_description": "",
    "title": "Idle Timeout",
    "type": ""
  },
  "idp-access-token-allowed-audiences": {
    "description": "IdP Access Token Allowed Audiences controls how the audience claim of an incoming IdP-issued access token is validated.",
    "id": "idp-access-token-allowed-audiences",
    "path": "/idp-access-token-allowed-audiences",
    "services": ["authenticate"],
    "short_description": "IdP Access Token Allowed Audiences controls how the audience claim of an incoming IdP-issued access token is validated.",
    "title": "IDP Access Token Allowed Audiences",
    "type": "string[]"
  },
  "idp-options-auth0": {
    "description": "Click for information on Auth0",
    "enterpriseOnly": true,
    "id": "idp-options-auth0",
    "path": "/../integrations/auth0",
    "title": "Identity Provider Auth0",
    "type": "string"
  },
  "idp-options-azure": {
    "description": "Click for information on Azure",
    "enterpriseOnly": true,
    "id": "idp-options-azure",
    "path": "/../integrations/azure",
    "title": "Identity Provider Azure",
    "type": "string"
  },
  "idp-options-github": {
    "description": "Click for information on Github",
    "enterpriseOnly": true,
    "id": "idp-options-github",
    "path": "/../integrations/github",
    "title": "Identity Provider Github",
    "type": "string"
  },
  "idp-options-gitlab": {
    "description": "Click for information on Gitlab",
    "enterpriseOnly": true,
    "id": "idp-options-gitlab",
    "path": "/../integrations/gitlab",
    "title": "Identity Provider Gitlab",
    "type": "string"
  },
  "idp-options-google": {
    "description": "Click for information on getting a service account from Google.",
    "enterpriseOnly": true,
    "id": "idp-options-google",
    "path": "/../integrations/google",
    "title": "Identity Provider Google",
    "type": "string"
  },
  "idp-options-keycloak": {
    "description": "Click for information on Keycloak",
    "enterpriseOnly": true,
    "id": "idp-options-keycloak",
    "path": "/../integrations/keycloak",
    "title": "Identity Provider Keycloak",
    "type": "string"
  },
  "idp-options-okta": {
    "description": "Click for information on Okta.",
    "enterpriseOnly": true,
    "id": "idp-options-okta",
    "path": "/../integrations/okta",
    "title": "Identity Provider Okta",
    "type": "string"
  },
  "idp-options-onelogin": {
    "description": "Click for information on Onelogin.",
    "enterpriseOnly": true,
    "id": "idp-options-onelogin",
    "path": "/../integrations/one-login",
    "title": "Identity Provider Onelogin",
    "type": "string"
  },
  "idp-options-ping": {
    "description": "Click for information on Ping.",
    "enterpriseOnly": true,
    "id": "idp-options-ping",
    "path": "/../integrations/ping",
    "title": "Identity Provider Ping",
    "type": "string"
  },
  "insecure-server": {
    "description": "Turning on insecure server mode will result in pomerium starting, and operating without any protocol encryption in transit.",
    "id": "insecure-server",
    "path": "/insecure-server",
    "services": [],
    "title": "Insecure Server",
    "type": "bool"
  },
  "javascript-security": {
    "description": "If applied, prevents JavaScript in browsers from reading user session cookies.",
    "id": "javascript-security",
    "path": "/cookies#cookie-http-only",
    "services": [],
    "short_description": "",
    "title": "Javascript Security",
    "type": "bool"
  },
  "jwt-claim-headers": {
    "description": "Passes user session data to upstream applications as HTTP Request Headers and additional JWT claims.",
    "id": "jwt-claim-headers",
    "path": "/jwt-claim-headers",
    "services": [],
    "title": "JWT Claim Headers",
    "type": "slice of string"
  },
  "jwt-groups-filter": {
    "description": "Restricts the set of groups allowed in the Pomerium JWT and Impersonate-Group headers, either based on applied policies or using a specific list of groups.",
    "id": "jwt-groups-filter",
    "path": "/jwt-groups-filter",
    "services": [],
    "title": "JWT Groups Filter"
  },
  "jwt-groups-filter-route": {
    "description": "Restricts the set of groups allowed in the Pomerium JWT and Impersonate-Group headers, either based on applied policies or using a specific list of groups.",
    "id": "jwt-groups-filter-route",
    "path": "/routes/jwt-groups-filter",
    "services": [],
    "title": "JWT Groups Filter (per route)"
  },
  "jwt-issuer-format": {
    "description": "Format of the Pomerium JWT issuer claim (host only or URI).",
    "id": "jwt-issuer-format",
    "path": "/routes/jwt-issuer-format",
    "services": ["proxy"],
    "title": "JWT Issuer Format",
    "type": "string"
  },
  "kubernetes-service-account-token": {
    "description": "String containing a Kubernetes bearer token.",
    "id": "kubernetes-service-account-token",
    "path": "/routes/kubernetes-service-account-token",
    "services": ["proxy"],
    "title": "Kubernetes Service Account Token",
    "type": "string"
  },
  "kubernetes-service-account-token-file": {
    "description": "File location containing a Kubernetes bearer token.",
    "id": "kubernetes-service-account-token-file",
    "path": "/routes/kubernetes-service-account-token-file",
    "services": ["proxy"],
    "title": "Kubernetes Service Account Token File",
    "type": "string"
  },
  "load-balancing-policy": {
    "description": "Defines the Load Balancing strategy for multiple upstream servers.",
    "id": "load-balancing-policy",
    "path": "/routes/load-balancing#load-balancing-policy",
    "services": ["proxy"],
    "title": "Load Balancing Policy",
    "type": "enum"
  },
  "load-balancing-policy-config": {
    "id": "load-balancing-policy-config",
    "path": "/routes/load-balancing-policy-config",
    "services": ["proxy"],
    "title": "Load Balancing Policy Config",
    "type": "object"
  },
  "load-balancing-settings": {
    "id": "load-balancing-settings",
    "path": "/routes/load-balancing",
    "title": "Load Balancing Settings"
  },
  "log-level": {
    "description": "Sets the global logging level for this cluster.",
    "id": "log-level",
    "path": "/log-level",
    "services": [],
    "title": "Log Level",
    "type": "string"
  },
  "logo-url": {
    "description": "A URL pointing to your logo. Defaults to Pomerium's Logo.",
    "id": "logo-url",
    "path": "/branding#logo-url",
    "services": [],
    "title": "Logo URL",
    "type": "URL"
  },
  "manage-devices": {
    "enterpriseOnly": true,
    "id": "manage-devices",
    "path": "/../capabilities/device-identity",
    "title": "Manage Devices"
  },
  "metrics-address": {
    "description": "Expose a prometheus format HTTP endpoint on the specified port.",
    "id": "metrics-address",
    "path": "/metrics#metrics-address",
    "services": [],
    "title": "Metrics Address",
    "type": "string"
  },
  "metrics-basic-authentication": {
    "id": "metrics-basic-authentication",
    "path": "/metrics#metrics-basic-authentication",
    "services": [],
    "title": "Metrics Basic Authentication",
    "type": ""
  },
  "metrics-certificate": {
    "description": "certificate relative file location string",
    "id": "metrics-certificate",
    "path": "/metrics#metrics-certificate",
    "services": [],
    "title": "Metrics Certificate",
    "type": "string"
  },
  "metrics-client-certificate-authority": {
    "description": "Client certificate authority relative file location string",
    "id": "metrics-client-certificate-authority",
    "path": "/metrics#metrics-client-certificate-authority",
    "services": [],
    "title": "Metrics Client Certificate Authority",
    "type": "string"
  },
  "metrics-settings": {
    "description": "Configure metrics settings in Pomerium.",
    "id": "metrics-settings",
    "path": "/metrics",
    "services": [],
    "title": "Metrics Settings",
    "type": "string"
  },
  "migrate-routes": {
    "description": "A way to migrate routes from an existing Open Source Pomerium config file. You probably only want to do this once.",
    "enterpriseOnly": true,
    "id": "migrate-routes",
    "title": "Migrate Routes"
  },
  "new-enrollment": {
    "enterpriseOnly": true,
    "id": "new-enrollment",
    "path": "/../capabilities/device-identity#new-enrollment",
    "title": "New Enrollment"
  },
  "outlier-detection": {
    "id": "outlier-detection",
    "path": "/routes/outlier-detection",
    "services": ["proxy"],
    "title": "Outlier Detection",
    "type": "object"
  },
  "override-certificate-name": {
    "description": "Secure service communication can fail if the external certificate does not match the internally routed service hostname/SNI.",
    "id": "override-certificate-name",
    "path": "/override-certificate-name",
    "services": [],
    "title": "Override Certificate Name",
    "type": "string"
  },
  "override-ip-address": {
    "description": "Manually sets the IP address of this cluster and overrides the detected IP. Use this setting if Pomerium can't connect to cluster over detected IP.",
    "id": "override-ip-address",
    "title": "Override IP Address"
  },
  "pass-identity-headers": {
    "description": "If applied, passes X-Pomerium-Jwt-Assertion header and JWT Claims Headers to all upstream applications.",
    "id": "pass-identity-headers",
    "path": "/pass-identity-headers",
    "services": ["proxy"],
    "short_description": "",
    "title": "Pass Identity Headers",
    "type": "boolean"
  },
  "pass-identity-headers-per-route": {
    "description": "If applied, passes X-Pomerium-Jwt-Assertion header and JWT Claims Headers to the upstream application.",
    "id": "pass-identity-headers-per-route",
    "path": "/routes/pass-identity-headers-per-route",
    "services": ["proxy"],
    "short_description": "",
    "title": "Pass Identity Headers (per route)",
    "type": "boolean"
  },
  "path": {
    "description": "Matches incoming requests with a path that is an exact match for the specified path.",
    "id": "path",
    "path": "/routes/path-matching#path",
    "services": ["proxy"],
    "short_description": "",
    "title": "Path",
    "type": "string"
  },
  "path-matching-settings": {
    "description": "Configure Path Matching settings in Pomerium.",
    "id": "path-matching",
    "path": "/routes/path-matching",
    "services": ["proxy"],
    "title": "Path Matching Settings",
    "type": "string"
  },
  "path-redirect": {
    "description": "Swaps the incoming Path portion of the URL with the specified value.",
    "id": "path-redirect",
    "path": "/routes/redirect#redirect-options",
    "title": "Path Redirect",
    "type": "String"
  },
  "path-rewriting-settings": {
    "description": "Configure Path Rewriting settings in Pomerium.",
    "id": "path-rewriting-settings",
    "path": "/routes/path-rewriting",
    "services": ["proxy"],
    "title": "Path Rewriting Settings",
    "type": "string"
  },
  "policy-definition": {
    "description": "Adds the explanation presented to an unauthorized user when they access a route with this policy. Optional.",
    "id": "policy-definition",
    "services": [],
    "title": "Definition",
    "type": "string"
  },
  "policy-description": {
    "description": "Adds an optional description for this policy.",
    "id": "policy-description",
    "title": "Policy Description"
  },
  "policy-enforcement": {
    "description": "Determines if a policy applies to all routes or can be applied optionally to a given route.",
    "id": "policy-enforcement",
    "title": "Policy Enforcement"
  },
  "policy-explanation": {
    "description": "Adds the explanation presented to an unauthorized user when they access a route with this policy. Optional.",
    "id": "policy-explanation",
    "services": [],
    "title": "Explanation",
    "type": "string"
  },
  "policy-inheritance": {
    "id": "policy-inheritance",
    "path": "/../capabilities/namespacing#hierarchical-policy-enforcement",
    "services": [],
    "title": "Enforcement",
    "type": "string"
  },
  "policy-remediation": {
    "description": "Adds the message, warning, or instructions presented to an unauthorized user to help them self-remediate. Optional.",
    "enterpriseOnly": "true",
    "id": "policy-remediation",
    "services": [],
    "title": "Remediation",
    "type": "string"
  },
  "polling-max-delay": {
    "description": "Maximum delay between requests to the IdP Directory.",
    "id": "polling-max-delay",
    "path": "/identity-provider-settings#identity-provider-polling-minmax-delay",
    "title": "Max Polling Delay",
    "type": "string"
  },
  "polling-min-delay": {
    "description": "Minimum delay between requests to the IdP Directory.",
    "id": "polling-min-delay",
    "path": "/identity-provider-settings#identity-provider-polling-minmax-delay",
    "title": "Min Polling Delay",
    "type": "string"
  },
  "port-redirect": {
    "description": "Swaps the incoming Port with the specified value. Type: Integer.",
    "id": "port-redirect",
    "path": "/routes/redirect#redirect-options",
    "title": "Port Redirect",
    "type": "Integer"
  },
  "prefix": {
    "description": "Matches incoming requests with a path that begins with the specified prefix.",
    "id": "prefix",
    "path": "/routes/path-matching#prefix",
    "services": ["proxy"],
    "short_description": "",
    "title": "Prefix",
    "type": "string"
  },
  "prefix-rewrite": {
    "description": "While forwarding a request, Prefix Rewrite swaps the matched prefix (or path) with the specified value.",
    "id": "prefix-rewrite",
    "path": "/routes/path-rewriting#prefix-rewrite",
    "services": ["proxy"],
    "short_description": "",
    "title": "Prefix Rewrite",
    "type": "string"
  },
  "prefix-rewrite-redirect": {
    "description": "Swaps the incoming Matched Prefix with the specified value.",
    "id": "path-rewrite-redirect",
    "path": "/routes/redirect#redirect-options",
    "title": "Prefix Rewrite Redirect",
    "type": "String"
  },
  "preserve-host-header": {
    "description": "Passes the host header from the incoming request to the proxied host, instead of the destination hostname.",
    "id": "preserve-host-header",
    "path": "/routes/headers#1-preserve-host-header",
    "services": ["proxy"],
    "short_description": "",
    "title": "Preserve Host Header",
    "type": "boolean"
  },
  "primary-color": {
    "description": "A hex code that determines the primary color for the Enterprise Console and Route Error Details pages.",
    "id": "primary-color",
    "path": "/branding#primary-color",
    "services": [],
    "short_description": "",
    "title": "Primary Color",
    "type": "string"
  },
  "primary-color-dark-mode": {
    "description": "A hex code that determines the primary color for the Enterprise Console and Route Error Details pages when in Dark Mode.",
    "id": "darkmode-primary-color",
    "path": "/branding#primary-color-dark-mode",
    "services": [],
    "short_description": "",
    "title": "Primary Color (Dark Mode)",
    "type": "string"
  },
  "programmatic-redirect-domain-whitelist": {
    "id": "programmatic-redirect-domain-whitelist",
    "path": "/programmatic-redirect-domain-whitelist",
    "services": [],
    "title": "Programmatic Redirect Domain Whitelist",
    "type": "array of string"
  },
  "proxy-log-level": {
    "description": "Sets the logging level for the Pomerium Proxy service.",
    "id": "proxy-log-level",
    "path": "/proxy-log-level",
    "services": [],
    "title": "Proxy Log Level",
    "type": "string"
  },
  "public-access": {
    "description": "Instructs Pomerium to grant unauthorized and unauthenticated access to all requests to the upstream service. Should be applied only to public web services. If applied, no other policy should be provided for this route.",
    "id": "public-access",
    "path": "/routes/public-access",
    "services": ["proxy"],
    "title": "Public Access",
    "type": "bool"
  },
  "read-timeout": {
    "description": "Sets the amount of time for the client to receive the entire request stream.",
    "id": "read-timeout",
    "path": "/global-timeouts#read-timeout",
    "services": [],
    "short_description": "",
    "title": "Read Timeout",
    "type": ""
  },
  "redirect": {
    "description": "Redirects incoming requests to a new URL.",
    "id": "redirect",
    "path": "/routes/redirect",
    "services": ["proxy"],
    "title": "Redirect",
    "type": "object"
  },
  "redirect-url": {
    "description": "Optional: The URL the user will be taken to after device enrollment is successful.",
    "enterpriseOnly": true,
    "id": "redirect-url",
    "path": "/../capabilities/device-identity#create-an-enrollment-link",
    "title": "Redirect URL"
  },
  "regex": {
    "description": "Matches incoming requests with a path that matches the specified regular expression.",
    "id": "regex",
    "path": "/routes/path-matching#regex",
    "services": ["proxy"],
    "title": "Regex",
    "type": "regular expression"
  },
  "regex-priority-order": {
    "description": "Rewrites the URL path according to the regex rewrite pattern.",
    "id": "regex-priority-order",
    "path": "/routes/regex-priority-order",
    "services": ["proxy"],
    "title": "Regex Priority Order",
    "type": "uint32"
  },
  "regex-rewrite": {
    "description": "Rewrites the URL path according to the regex rewrite pattern.",
    "id": "regex-rewrite",
    "path": "/routes/path-rewriting#regex-rewrite",
    "services": ["proxy"],
    "short_description": "",
    "title": "Regex Rewrite",
    "type": "string"
  },
  "regex-rewrite-substitution": {
    "description": "Rewrites the URL path according to the regex rewrite substitution.",
    "enterpriseOnly": true,
    "id": "regex-rewrite-substitution",
    "path": "/routes/path-rewriting#regex-rewrite",
    "short_description": "",
    "title": "Regex Rewrite Substitution"
  },
  "remove-request-headers": {
    "description": "Removes given request headers so they do not reach the upstream server.",
    "id": "remove-request-headers",
    "path": "/routes/headers#remove-request-headers",
    "services": ["proxy"],
    "title": "Remove Request Headers",
    "type": "array of strings"
  },
  "request-parameters": {
    "description": "Specifies a mapping of HTTP headers to be added to proxied requests. Downstream application headers will be overwritten by Pomerium's headers on conflict.",
    "id": "identity-provider-request-params",
    "path": "/identity-provider-settings#identity-provider-request-params",
    "services": [],
    "title": "Identity Provider Request Params",
    "type": "map of strings key value pairs"
  },
  "response-body": {
    "description": "Specifies the response body that Pomerium returns for a static HTTP response. Type: String. For example, 'plain text.'",
    "id": "response-body",
    "path": "/routes/direct-response",
    "services": ["proxy"],
    "title": "Direct Response Body"
  },
  "response-code": {
    "description": "Sets the Response Code to use for the redirect. Defaults to 301. Type: Integer.",
    "id": "response-code",
    "path": "/routes/redirect#redirect-options",
    "title": "Response Code",
    "type": "String"
  },
  "response-headers": {
    "description": "Sets static HTTP Response Header values for all managed routes.",
    "id": "set-response-headers",
    "path": "/set-response-headers",
    "services": [],
    "title": "Set Response Headers",
    "type": "map of strings key value pairs"
  },
  "response-status": {
    "description": "Sets the status code that Pomerium returns for a static HTTP response. Type: Integer. For example, 200.",
    "id": "response-status",
    "path": "/routes/direct-response",
    "services": ["proxy"],
    "title": "Direct Response Status"
  },
  "rewrite-response-headers": {
    "description": "Modifies response headers before they are returned to the client. 'Header' matches the HTTP header name; 'prefix' will be replaced with 'value'.",
    "id": "rewrite-response-headers",
    "path": "/routes/headers#rewrite-response-headers",
    "services": ["proxy"],
    "title": "Rewrite Response Headers",
    "type": "object"
  },
  "route-idle-timeout": {
    "description": "Sets the time to terminate the upstream connection if there are no active streams. Defaults to 5 minutes.",
    "id": "route-idle-timeout",
    "path": "/routes/timeouts#idle-timeout",
    "services": ["proxy"],
    "title": "Idle Timeout",
    "type": "duration"
  },
  "route-logo-url": {
    "description": "The route logo URL.",
    "id": "route-logo-url",
    "path": "/routes/logo-url",
    "services": ["proxy"],
    "title": "Route Logo URL",
    "type": "URL"
  },
  "route-timeout": {
    "description": "Sets the per-route timeout value. Cannot exceed global timeout values. Defaults to 30 seconds.",
    "id": "route-timeout",
    "path": "/routes/timeouts#route-timeout",
    "services": ["proxy"],
    "title": "Route Timeout",
    "type": "duration"
  },
  "scheme-redirect": {
    "description": "Swaps the incoming Scheme with the specified value.",
    "id": "scheme-redirect",
    "path": "/routes/redirect#redirect-options",
    "title": "Scheme Redirect",
    "type": "String"
  },
  "search-users": {
    "description": "New Enrollment URLs are only valid for the specified user.",
    "enterpriseOnly": true,
    "id": "search-users",
    "path": "/../capabilities/device-identity#new-enrollment",
    "title": "Search Users"
  },
  "secondary-color": {
    "description": "A hex code that determines the secondary color for the Enterprise Console and Route Error Details pages.",
    "id": "secondary-color",
    "path": "/branding#secondary-color",
    "services": [],
    "short_description": "",
    "title": "Secondary Color",
    "type": "string"
  },
  "secondary-color-dark-mode": {
    "description": "A hex code that determines the secondary color for the Enterprise Console and Route Error Details pages when in Dark Mode.",
    "id": "darkmode-secondary-color",
    "path": "/branding#secondary-color-dark-mode",
    "services": [],
    "short_description": "",
    "title": "Secondary Color (Dark Mode)",
    "type": "string"
  },
  "service-account-description": {
    "description": "A customizable description that identifies this service account.",
    "id": "service-account-description",
    "path": "/../capabilities/service-accounts",
    "title": "Service Account Description"
  },
  "service-account-expiration": {
    "description": "Sets the expiration time for this service account token. After the specified date, this token becomes invalid.",
    "id": "service-account-expiration",
    "path": "/../capabilities/service-accounts",
    "title": "Service Account Expiration"
  },
  "service-account-token": {
    "description": "The generated JWT used to authenticate this service account. See documentation for supported authentication methods and examples.",
    "id": "service-account-token",
    "path": "/../capabilities/service-accounts#authenticate-with-the-service-account-jwt",
    "title": "Service Account Token"
  },
  "service-account-user-id": {
    "description": "The User ID associated with this service account.",
    "id": "service-account-user-id",
    "path": "/../capabilities/service-accounts",
    "title": "Service Account User ID"
  },
  "service-mode": {
    "description": "Service mode sets the pomerium service(s) to run.",
    "id": "service-mode",
    "path": "/service-mode",
    "services": [],
    "title": "Service Mode",
    "type": "string"
  },
  "set-request-headers": {
    "description": "Sets static and dynamic values for given request headers. Available substitutions: ${pomerium.id_token}, ${pomerium.access_token}, ${pomerium.client_cert_fingerprint}.",
    "id": "set-request-headers",
    "path": "/routes/headers#set-request-headers",
    "services": ["proxy"],
    "short_description": "",
    "title": "Set Request Headers",
    "type": "map of strings key value pairs"
  },
  "set-response-headers-route": {
    "description": "Sets static response header values for a route. These headers take precedence over globally set response headers.",
    "id": "set-response-headers-route",
    "path": "/routes/headers#set-response-headers",
    "services": [],
    "title": "Set Response Headers (Per Route)",
    "type": "map of strings key value pairs"
  },
  "shared-secret": {
    "description": "Shared Secret is the base64-encoded, 256-bit key used to mutually authenticate requests between services.",
    "id": "shared-secret",
    "path": "/shared-secret",
    "services": [],
    "short_description": "",
    "title": "Shared Secret",
    "type": "string"
  },
  "shared-secret-file": {
    "description": "File path containing base64-encoded shared secret.",
    "id": "shared-secret-file",
    "path": "/shared-secret",
    "services": [],
    "short_description": "",
    "title": "Shared Secret File",
    "type": "string"
  },
  "show-error-details": {
    "description": "If applied, shows error details, including policy explanation and remediation for 403 Forbidden responses.",
    "id": "show-error-details",
    "path": "/routes/show-error-details",
    "services": [],
    "title": "Show Error Details",
    "type": "bool"
  },
  "signing-key": {
    "description": "Signing Key is the key used to sign a user's attestation JWT which can be consumed by upstream applications to pass along identifying user information like username, id, and groups.",
    "id": "signing-key",
    "path": "/signing-key",
    "services": [],
    "short_description": "y",
    "title": "Signing Key",
    "type": "string"
  },
  "signing-key-file": {
    "description": "File path to a secret containing the signing key, used to sign a user's attestation JWT which can be consumed by upstream applications to pass along identifying user information like username, id, and groups.",
    "id": "signing-key-file",
    "path": "/signing-key",
    "services": [],
    "short_description": "",
    "title": "Signing Key File",
    "type": "string"
  },
  "signout-redirect-url": {
    "id": "signout-redirect-url",
    "path": "/signout-redirect-url",
    "services": ["proxy"],
    "title": "Signout Redirect URL",
    "type": "URL"
  },
  "spdy": {
    "description": "If applied, this setting enables Pomerium to proxy SPDY protocol upgrades.",
    "id": "spdy",
    "path": "/routes/timeouts#spdy",
    "services": ["proxy"],
    "title": "SPDY",
    "type": "bool"
  },
  "strip-query": {
    "description": "Indicates that during redirection, the Query portion of the URL will be removed. Defaults to false.",
    "id": "strip-query",
    "path": "/routes/redirect#redirect-options",
    "title": "Strip Query",
    "type": "Boolean"
  },
  "tcp-health-check-receive": {
    "description": "Checks a response with 'fuzzy' matching to the extent that each payload block must be found, and in the specified order, but not necessarily contiguous. Optional.",
    "id": "tcp-health-check-receive",
    "path": "/routes/load-balancing#tcp-healthcheck-overview",
    "title": "TCP Health Check Receive",
    "type": "Payload"
  },
  "tcp-health-check-send": {
    "description": "Defines the payload, which must be one of text or binary. An empty payload results in a connect-only health check. Optional.",
    "id": "tcp-health-check-send",
    "path": "/routes/load-balancing#tcp-healthcheck-overview",
    "title": "TCP Health Check Send",
    "type": "Payload"
  },
  "the-number-of-trusted-hops": {
    "description": "The number of trusted reverse proxies in front of pomerium.",
    "id": "the-number-of-trusted-hops",
    "path": "/x-forwarded-for-settings#xff-number-of-trusted-hops",
    "services": [],
    "title": "XFF Number of Trusted Hops",
    "type": "uint32"
  },
  "timeouts": {
    "id": "timeouts",
    "path": "/routes/timeouts",
    "title": "Timeouts Settings"
  },
  "tls-client-certificate": {
    "description": "Pomerium presents this client certificate to upstream services when requested to enforce mTLS.",
    "id": "tls-client-certificate",
    "path": "/routes/tls#tls-client-certificate",
    "services": ["proxy"],
    "title": "TLS Client Certificate",
    "type": "string"
  },
  "tls-custom-certificate-authority": {
    "description": "Defines a set of root certificate authorities that Pomerium uses when verifying upstream server certificates.",
    "id": "tls-custom-certificate-authority",
    "path": "/routes/tls#tls-custom-certificate-authority",
    "services": ["proxy"],
    "title": "TLS Custom Certificate Authority"
  },
  "tls-downstream-client-certificate-authority": {
    "id": "tls-downstream-client-certificate-authority",
    "path": "/tls#tls-downstream-client-certificate-authority",
    "services": ["proxy"],
    "title": "TLS Downstream Client Certificate Authority"
  },
  "tls-downstream-server-name": {
    "description": "This server name overrides the Hostname in the 'From:' field, and serves as the Server Name Indication when establishing a TLS connection with Pomerium.",
    "id": "tls-downstream-server-name",
    "path": "/routes/tls#tls-downstream-server-name",
    "services": [],
    "title": "TLS Downstream Server Name",
    "type": "string"
  },
  "tls-settings": {
    "id": "tls-settings",
    "path": "/routes/tls",
    "services": ["proxy"],
    "title": "TLS Settings",
    "type": "string"
  },
  "tls-skip-verification": {
    "description": "If applied, Pomerium accepts any certificate presented by the upstream server and any Hostname in that certificate. Use for testing only.",
    "id": "tls-skip-verification",
    "path": "/routes/tls#tls-skip-verification",
    "services": ["proxy"],
    "title": "TLS Skip Verification",
    "type": "bool"
  },
  "tls-upstream-allow-renegotiation": {
    "description": "If applied, this setting allows server-initiated TLS renegotiation for upstream servers.",
    "id": "tls-upstream-allow-renegotiation",
    "path": "/routes/tls#tls-upstream-allow-renegotiation",
    "services": ["proxy"],
    "title": "TLS Upstream Allow Renegotiation",
    "type": "bool"
  },
  "tls-upstream-server-name": {
    "description": "This server name overrides the Hostname in the 'To:' field, and will be used to verify the certificate name.",
    "id": "tls-upstream-server-name",
    "path": "/routes/tls#tls-upstream-server-name",
    "services": [],
    "title": "TLS Upstream Server Name",
    "type": "string"
  },
  "to": {
    "description": "The destination(s) of a proxied request. Must contain a scheme and Hostname, with an optional weight.",
    "id": "to",
    "path": "/routes/to",
    "services": ["proxy"],
    "short_description": "",
    "title": "To",
    "type": "URL(s)"
  },
  "tracing": {
    "id": "tracing",
    "path": "/tracing",
    "services": [],
    "title": "Tracing"
  },
  "tracing-headers": {
    "description": "Key=Value headers to add to all outgoing trace export requests",
    "id": "tracing-headers",
    "path": "/tracing",
    "services": [],
    "title": "OTLP Export Headers"
  },
  "tracing-otlp-endpoint": {
    "description": "Endpoint URL for OTLP trace data. Required.",
    "id": "tracing-otlp-endpoint",
    "path": "/tracing",
    "services": [],
    "title": "Tracing Provider"
  },
  "tracing-otlp-protocol": {
    "description": "Transport protocol to be used for OTLP trace data.",
    "id": "tracing-otlp-protocol",
    "path": "/tracing",
    "services": [],
    "title": "Tracing Provider"
  },
  "tracing-sample-rate": {
    "description": "The percentage of requests to sample. Default is 100%.",
    "id": "tracing-sample-rate",
    "path": "/tracing",
    "services": [],
    "title": "Tracing Sample Rate"
  },
  "use-proxy-protocol": {
    "id": "use-proxy-protocol",
    "path": "/use-proxy-protocol",
    "services": [],
    "title": "Use Proxy Protocol",
    "type": "bool"
  },
  "websocket-connections": {
    "description": "If applied, this setting enables Pomerium to proxy websocket connections.",
    "id": "websocket-connections",
    "path": "/routes/timeouts#websocket-connections",
    "services": ["proxy"],
    "title": "Websocket Connections",
    "type": "bool"
  },
  "write-timeout": {
    "description": "Sets max stream duration of an HTTP request/response exchange. Must be greater than read timeout.",
    "id": "write-timeout",
    "path": "/global-timeouts#write-timeout",
    "services": [],
    "short_description": "",
    "title": "Write Timeout",
    "type": ""
  },
  "x-forwarded-for-http-header": {
    "description": "Do not append client IP address to X-Forwarded-For header.",
    "id": "x-forwarded-for-http-header",
    "path": "/x-forwarded-for-settings#skip-xff-append",
    "services": [],
    "title": "Skip XFF Append",
    "type": "bool"
  },
  "x-forwarded-for-settings": {
    "description": "Describes X-Forwarded-For settings and behavior.",
    "id": "x-forwarded-for-settings",
    "path": "/x-forwarded-for-settings",
    "title": "X-Forwarded-For Settings"
  }
}
