{
  "access-log-fields": {
    "id": "access-log-fields",
    "title": "Access Log Fields",
    "path": "/access-log-fields",
    "description": "Displays HTTP request logs from the Pomerium Proxy service.",
    "short_description": "",
    "type": "string",
    "services": ["proxy"]
  },
  "authorize-log-fields": {
    "id": "authorize-log-fields",
    "title": "Authorize Log Fields",
    "path": "/authorize-log-fields",
    "description": "Displays HTTP request logs from the Pomerium Authorize service.",
    "short_description": "",
    "type": "string",
    "services": ["authorize"]
  },
  "address": {
    "id": "address",
    "title": "Address",
    "path": "/address",
    "description": "Specifies the Host and Port to serve HTTP requests from.",
    "short_description": "",
    "type": "string",
    "services": ["proxy"]
  },
  "authenticate-service-url": {
    "id": "authenticate-service-url",
    "path": "/authenticate-service-url",
    "title": "Authenticate Service URL",
    "description": "The externally accessible URL for the authenticate service.",
    "short_description": "",
    "type": "URL",
    "services": ["proxy", "authenticate", "authorize"]
  },
  "autocert": {
    "id": "autocert",
    "path": "/autocert#autocert",
    "title": "Autocert",
    "description": "Turning on autocert allows Pomerium to automatically retrieve, manage, and renew public facing TLS certificates from Lets Encrypt.",
    "short_description": "",
    "services": ["authenticate", "proxy"],
    "type": "bool"
  },
  "autocert-ca": {
    "id": "autocert-ca",
    "title": "Autocert CA",
    "path": "/autocert#autocert-ca",
    "description": "Autocert CA is the directory URL of the ACME CA to use when requesting certificates.",
    "short_description": "",
    "type": "",
    "services": ["authenticate", "proxy"]
  },
  "autocert-email": {
    "id": "autocert-email",
    "title": "Autocert Email",
    "path": "/autocert#autocert-email",
    "description": "Autocert Email is the email address to use when requesting certificates from an ACME CA.",
    "short_description": "",
    "services": ["authenticate", "proxy"],
    "type": "email"
  },
  "autocert-must-staple": {
    "id": "autocert-must-staple",
    "title": "Autocert Must-Staple",
    "path": "/autocert#autocert-must-staple",
    "type": "bool",
    "short_description": "",
    "services": ["authenticate", "proxy"]
  },
  "autocert-directory": {
    "id": "autocert-directory",
    "title": "Autocert Directory",
    "path": "/autocert#autocert-directory",
    "description": "Autocert directory is the path which Autocert will store x509 certificate data.",
    "services": ["authenticate", "proxy"],
    "short_description": "",
    "type": "string"
  },
  "autocert-use-staging": {
    "id": "autocert-use-staging",
    "title": "Autocert Use Staging",
    "path": "/autocert#autocert-use-staging",
    "description": "Autocert Use Staging setting allows you to use Let's Encrypt's staging environment, which has more lenient usage limits than the production environment.",
    "short_description": "",
    "type": "bool",
    "services": ["authenticate", "proxy"]
  },
  "autocert-eab-key-id": {
    "id": "autocert-eab-key-id",
    "title": "Autocert EAB Key ID",
    "path": "/autocert#autocert-eab-key-id",
    "description": "Autocert EAB Key ID is the key identifier when requesting a certificate from a CA with External Account Binding enabled.",
    "short_description": "",
    "type": "string",
    "services": ["authenticate", "proxy"]
  },
  "autocert-eab-mac-key": {
    "id": "autocert-eab-mac-key",
    "title": "Autocert EAB MAC Key",
    "path": "/autocert#autocert-eab-mac-key",
    "description": "Autocert EAB MAC Key is the base64, url-encoded secret key corresponding to the Autocert EAB Key ID.",
    "short_description": "",
    "type": "string",
    "services": ["authenticate", "proxy"]
  },
  "autocert-trusted-certificate-authority": {
    "id": "autocert-trusted-certificate-authority",
    "title": "Autocert Trusted Certificate Authority",
    "path": "/autocert#autocert-trusted-certificate-authority",
    "services": ["authenticate", "proxy"],
    "type": "string",
    "short_description": ""
  },
  "branding-settings": {
    "id": "branding",
    "title": "Branding Settings",
    "path": "/branding",
    "type": "string",
    "short_description": ""
  },
  "certificates": {
    "id": "certificates",
    "title": "Certificates Settings",
    "path": "/certificates",
    "type": "string",
    "short_description": "",
    "services": []
  },
  "certificate-authority": {
    "id": "certificate-authority",
    "title": "Certificates Authority",
    "path": "/certificates#certificate-authority",
    "type": "string",
    "description": "",
    "services": []
  },
  "downstream-mtls-client-certificate-authority": {
    "id": "downstream-mtls-client-certificate-authority",
    "title": "Downstream mTLS Certificate Authority",
    "path": "/downstream-mtls-settings#ca",
    "description": "A bundle of PEM-encoded X.509 certificates that will be treated as trust anchors when verifying client certificates",
    "short_description": "",
    "type": "string"
  },
  "downstream-mtls-crl": {
    "id": "downstream-mtls-crl",
    "title": "Downstream mTLS Certificate Revocation List",
    "path": "/downstream-mtls-settings#crl",
    "description": "A bundle of PEM-encoded certificate revocation lists to be consulted during certificate validation.",
    "short_description": "",
    "type": "string"
  },
  "downstream-mtls-enforcement": {
    "id": "downstream-mtls-enforcement",
    "title": "Downstream mTLS Enforcement Mode",
    "path": "/downstream-mtls-settings#enforcement-mode",
    "description": "Controls Pomerium's behavior when a client does not present a trusted client certificate.",
    "short_description": "",
    "type": "string"
  },
  "downstream-mtls-match-subject-alt-names": {
    "id": "downstream-mtls-match-subject-alt-names",
    "title": "Downstream mTLS Match SANs",
    "path": "/downstream-mtls-settings#match-sans",
    "description": "Require that each certificate contain a certain type of SAN.",
    "short_description": "",
    "type": "string"
  },
  "downstream-mtls-max-verify-depth": {
    "id": "downstream-mtls-max-verify-depth",
    "title": "Downstream mTLS Max Verify Depth",
    "path": "/downstream-mtls-settings#max-verify-depth",
    "description": "Sets a limit on the depth of a certificate chain presented by the client.",
    "short_description": "",
    "type": "string"
  },
  "cookies-settings": {
    "id": "cookies",
    "title": "Cookies Settings",
    "path": "/cookies",
    "services": [],
    "type": "string"
  },
  "identity-provider-settings": {
    "id": "identity-provider-settings",
    "title": "Identity Provider Settings",
    "path": "/identity-provider-settings",
    "description": "Configure and self-host your own Identity Provider with Pomerium's Identity Provider settings.",
    "type": "string"
  },
  "downstream-mtls-settings": {
    "id": "downstream-mtls-settings",
    "title": "Downstream mTLS Settings",
    "path": "/downstream-mtls-settings",
    "description": "Manage client certificate requirements for end users connecting to Pomerium-managed routes with downstream mTLS settings."
  },
  "identity-provider": {
    "id": "identity-provider",
    "title": "Identity Provider",
    "path": "/../identity-providers",
    "description": "Choose from a list of supported IDPs.",
    "type": "string",
    "enterpriseOnly": true
  },
  "idp-options-auth0": {
    "id": "idp-options-auth0",
    "path": "/../identity-providers/auth0",
    "title": "Identity Provider Auth0",
    "description": "Click for information on Auth0",
    "type": "string",
    "enterpriseOnly": true
  },
  "idp-options-azure": {
    "id": "idp-options-azure",
    "path": "/../identity-providers/azure",
    "title": "Identity Provider Azure",
    "description": "Click for information on Azure",
    "type": "string",
    "enterpriseOnly": true
  },
  "idp-options-github": {
    "id": "idp-options-github",
    "path": "/../identity-providers/github",
    "title": "Identity Provider Github",
    "description": "Click for information on Github",
    "type": "string",
    "enterpriseOnly": true
  },
  "idp-options-gitlab": {
    "id": "idp-options-gitlab",
    "title": "Identity Provider Gitlab",
    "path": "/../identity-providers/gitlab",
    "description": "Click for information on Gitlab",
    "type": "string",
    "enterpriseOnly": true
  },
  "idp-options-google": {
    "id": "idp-options-google",
    "path": "/../identity-providers/google",
    "title": "Identity Provider Google",
    "description": "Click for information on getting a service account from Google.",
    "type": "string",
    "enterpriseOnly": true
  },
  "idp-options-okta": {
    "id": "idp-options-okta",
    "path": "/../identity-providers/okta",
    "title": "Identity Provider Okta",
    "description": "Click for information on Okta.",
    "type": "string",
    "enterpriseOnly": true
  },
  "idp-options-onelogin": {
    "id": "idp-options-onelogin",
    "path": "/../identity-providers/one-login",
    "title": "Identity Provider Onelogin",
    "description": "Click for information on Onelogin.",
    "type": "string",
    "enterpriseOnly": true
  },
  "idp-options-ping": {
    "id": "idp-options-ping",
    "path": "/../identity-providers/ping",
    "title": "Identity Provider Ping",
    "description": "Click for information on Ping.",
    "type": "string",
    "enterpriseOnly": true
  },
  "polling-min-delay": {
    "id": "polling-min-delay",
    "title": "Min Polling Delay",
    "path": "/identity-provider-settings#identity-provider-polling-minmax-delay",
    "description": "Minimum delay between requests to the IdP Directory.",
    "type": "string"
  },
  "polling-max-delay": {
    "id": "polling-max-delay",
    "title": "Max Polling Delay",
    "path": "/identity-provider-settings#identity-provider-polling-minmax-delay",
    "description": "Maximum delay between requests to the IdP Directory.",
    "type": "string"
  },
  "javascript-security": {
    "id": "javascript-security",
    "title": "Javascript Security",
    "path": "/cookies#cookie-http-only",
    "description": "If applied, prevents JavaScript in browsers from reading user session cookies.",
    "short_description": "",
    "services": [],
    "type": "bool"
  },
  "expires": {
    "id": "expiration",
    "title": "Expiration",
    "path": "/cookies#cookie-expiration",
    "description": "Sets the lifetime of session cookies. After this interval, users must reauthenticate.",
    "short_description": "",
    "services": [],
    "type": "datetime"
  },
  "cookie-same-site": {
    "id": "cookie-same-site",
    "title": "Same Site",
    "path": "/cookies#cookie-samesite",
    "description": "Sets the SameSite Cookie Option.",
    "short_description": "",
    "services": [],
    "type": "string"
  },
  "ext-data-url": {
    "id": "ext-data-url",
    "title": "External Data URL",
    "description": "URL to the external dataset",
    "path": "/../integrations#url",
    "enterpriseOnly": true
  },
  "ext-data-record-type": {
    "id": "ext-data-record-type",
    "title": "External Data Record Type",
    "description": "Overridden by the directory structure of an archive file dataset",
    "path": "/../integrations#record-type",
    "enterpriseOnly": true
  },
  "ext-data-foreign-key": {
    "id": "ext-data-foreign-key",
    "title": "Foreign Key",
    "description": "Associates this key from a request to the external data",
    "path": "/../integrations#foreign-key",
    "enterpriseOnly": true
  },
  "ext-data-headers": {
    "id": "ext-data-headers",
    "title": "External Data Request Headers",
    "description": "Used when requesting the external dataset",
    "path": "/../integrations#headers",
    "enterpriseOnly": true
  },
  "ext-data-insecure-tls": {
    "id": "ext-data-insecure-tls",
    "title": "Allow Insecure TLS",
    "path": "/../integrations#allow-insecure-tls",
    "enterpriseOnly": true
  },
  "ext-data-client-tls-key": {
    "id": "ext-data-client-tls-key",
    "title": "Client TLS Key",
    "path": "/../integrations#client-tls-key",
    "enterpriseOnly": true
  },
  "ext-data-polling": {
    "id": "ext-data-polling",
    "title": "Polling Min / Max Delay",
    "path": "/../integrations#polling-minmax-delay",
    "enterpriseOnly": true
  },
  "data-broker-service": {
    "id": "data-broker-service",
    "title": "Databroker Service",
    "path": "/databroker#databroker-service",
    "services": ["databroker"]
  },
  "data-broker-service-url": {
    "id": "data-broker-service-url",
    "title": "Databroker Service URL",
    "path": "/databroker#databroker-service-url",
    "services": [],
    "type": "URL"
  },
  "global-timeouts": {
    "id": "global-timeouts",
    "title": "Global Timeouts",
    "path": "/global-timeouts",
    "description": "Timeouts set the global server timeouts. Timeouts can also be set for individual routes.",
    "services": [],
    "type": ""
  },
  "read-timeout": {
    "id": "read-timeout",
    "title": "Read Timeout",
    "path": "/global-timeouts#read-timeout",
    "description": "Sets the amount of time for the client to receive the entire request stream.",
    "short_description": "",
    "services": [],
    "type": ""
  },
  "write-timeout": {
    "id": "write-timeout",
    "title": "Write Timeout",
    "path": "/global-timeouts#write-timeout",
    "description": "Sets max stream duration of an HTTP request/response exchange. Must be greater than read timeout.",
    "short_description": "",
    "services": [],
    "type": ""
  },
  "idle-timeout": {
    "id": "idle-timeout",
    "title": "Idle Timeout",
    "path": "/global-timeouts#idle-timeout",
    "description": "Sets the time at which a downstream or upstream connection will be terminated if no active streams.",
    "short_description": "",
    "services": [],
    "type": ""
  },
  "grpc-settings": {
    "id": "grpc-settings",
    "title": "gRPC Settings",
    "path": "/grpc",
    "description": "Configure gRPC configuration settings in Pomerium.",
    "services": [],
    "type": "string"
  },
  "grpc-address": {
    "id": "grpc-address",
    "title": "gRPC Address",
    "path": "/grpc#grpc-address",
    "description": "Address specifies the host and port to serve GRPC requests from.",
    "services": [],
    "type": "string"
  },
  "grpc-insecure": {
    "id": "grpc-insecure",
    "title": "gRPC Insecure",
    "path": "/grpc#grpc-insecure",
    "description": "If set, GRPC Insecure disables transport security for communication between the proxy and authorize components.",
    "services": [],
    "type": "bool"
  },
  "grpc-client-timeout": {
    "id": "grpc-client-timeout",
    "title": "gRPC Client Timeout",
    "path": "/grpc#grpc-client-timeout",
    "services": [],
    "type": ""
  },
  "grpc-client-dns-roundrobin": {
    "id": "grpc-client-dns-roundrobin",
    "title": "gRPC Client DNS RoundRobin",
    "path": "/grpc#grpc-client-dns-roundrobin",
    "services": [],
    "type": "bool"
  },
  "http-redirect-address": {
    "id": "http-redirect-address",
    "title": "HTTP Redirect Address",
    "path": "/http-redirect-address",
    "description": "If set, HTTP Redirect Address specifies the Host and Port to redirect HTTP to HTTPS traffic on.",
    "services": [],
    "type": "string"
  },
  "insecure-server": {
    "id": "insecure-server",
    "title": "Insecure Server",
    "path": "/insecure-server",
    "description": "Turning on insecure server mode will result in pomerium starting, and operating without any protocol encryption in transit.",
    "services": [],
    "type": "bool"
  },
  "dns-lookup-family": {
    "id": "dns-lookup-family",
    "title": "DNS Lookup Family",
    "path": "/dns-lookup-family",
    "description": "Sets the DNS IP address resolution policy.",
    "services": [],
    "type": "string"
  },
  "log-level": {
    "id": "log-level",
    "title": "Log Level",
    "path": "/log-level",
    "description": "Sets the global logging level for this cluster.",
    "services": [],
    "type": "string"
  },
  "metrics-settings": {
    "id": "metrics-settings",
    "title": "Metrics Settings",
    "path": "/metrics",
    "description": "Configure metrics settings in Pomerium.",
    "services": [],
    "type": "string"
  },
  "metrics-address": {
    "id": "metrics-address",
    "title": "Metrics Address",
    "path": "/metrics#metrics-address",
    "description": "Expose a prometheus format HTTP endpoint on the specified port.",
    "services": [],
    "type": "string"
  },
  "metrics-basic-authentication": {
    "id": "metrics-basic-authentication",
    "title": "Metrics Basic Authentication",
    "path": "/metrics#metrics-basic-authentication",
    "services": [],
    "type": ""
  },
  "metrics-certificate": {
    "id": "metrics-certificate",
    "title": "Metrics Certificate",
    "path": "/metrics#metrics-certificate",
    "services": [],
    "type": "string",
    "description": "certificate relative file location string"
  },
  "metrics-client-certificate-authority": {
    "id": "metrics-client-certificate-authority",
    "title": "Metrics Client Certificate Authority",
    "path": "/metrics#metrics-client-certificate-authority",
    "services": [],
    "type": "string",
    "description": "Client certificate authority relative file location string"
  },
  "proxy-log-level": {
    "id": "proxy-log-level",
    "title": "Proxy Log Level",
    "path": "/proxy-log-level",
    "description": "Sets the logging level for the Pomerium Proxy service.",
    "services": [],
    "type": "string"
  },
  "service-mode": {
    "id": "service-mode",
    "title": "Service Mode",
    "path": "/service-mode",
    "description": "Service mode sets the pomerium service(s) to run.",
    "services": [],
    "type": "string"
  },
  "shared-secret": {
    "id": "shared-secret",
    "title": "Shared Secret",
    "path": "/shared-secret",
    "description": "Shared Secret is the base64-encoded, 256-bit key used to mutually authenticate requests between services.",
    "services": [],
    "type": "string",
    "short_description": ""
  },
  "shared-secret-file": {
    "id": "shared-secret-file",
    "title": "Shared Secret File",
    "path": "/shared-secret-file",
    "description": "File path containing base64-encoded shared secret.",
    "services": [],
    "type": "string",
    "short_description": ""
  },
  "tracing": {
    "id": "tracing",
    "title": "Tracing",
    "path": "/tracing",
    "services": []
  },
  "tracing-provider": {
    "id": "tracing-provider",
    "title": "Tracing Provider",
    "description": "The name of the tracing provider. For example, Jaeger or Zipkin. Required.",
    "path": "/tracing",
    "services": []
  },
  "tracing-sample-rate": {
    "id": "tracing-sample-rate",
    "title": "Tracing Sample Rate",
    "description": "The percentage of requests to sample in decimal notation. Default is 0.0001, or .01%. Optional.",
    "path": "/tracing",
    "services": []
  },
  "use-proxy-protocol": {
    "id": "use-proxy-protocol",
    "title": "Use Proxy Protocol",
    "path": "/use-proxy-protocol",
    "services": [],
    "type": "bool"
  },
  "envoy-bootstrap-options": {
    "id": "envoy-bootstrap-options",
    "title": "Envoy Bootstrap Options",
    "path": "/envoy-bootstrap-options",
    "services": [],
    "type": "string"
  },
  "authenticate-callback-path": {
    "id": "authenticate-callback-path",
    "title": "Authenticate Callback Path",
    "path": "/authenticate-callback-path",
    "description": "The authenticate callback path is the path/url from the authenticate service that will receive the response from your identity provider.",
    "services": [],
    "type": "string"
  },
  "authenticate-internal-service-url": {
    "id": "authenticate-internal-service-url",
    "title": "Authenticate Internal Service URL",
    "path": "/authenticate-internal-service-url",
    "services": [],
    "type": "URL"
  },
  "identity-provider-client-id": {
    "id": "identity-provider-client-id",
    "title": "Identity Provider Client ID",
    "path": "/identity-provider-settings#identity-provider-client-id",
    "description": "The OAuth 2.0 Client Identifier retrieved from an identity provider.",
    "services": [],
    "type": "string"
  },
  "identity-provider-client-secret-file": {
    "id": "identity-provider-client-secret-file",
    "title": "Identity Provider Client Secret File",
    "path": "/identity-provider-settings#identity-provider-client-secret-file",
    "description": "File path containing the client secret, the OAuth 2.0 Secret Identifier retrieved from your identity provider.",
    "services": [],
    "type": "string"
  },
  "identity-provider-client-secret": {
    "id": "identity-provider-client-secret",
    "title": "Identity Provider Client Secret",
    "path": "/identity-provider-settings#identity-provider-client-secret",
    "description": "The OAuth 2.0 Secret Identifier retrieved from an identity provider.",
    "services": [],
    "type": "string"
  },
  "identity-provider-name": {
    "id": "identity-provider-name",
    "title": "Identity Provider Name",
    "path": "/identity-provider-settings#identity-provider-name",
    "description": "The short-hand name of an OIDC identity provider used for authentication.",
    "services": [],
    "type": "string"
  },
  "identity-provider-scopes": {
    "id": "identity-provider-scopes",
    "title": "Identity Provider Scopes",
    "path": "/identity-provider-settings#identity-provider-scopes",
    "description": "IdP scopes correspond to access privilege scopes. For example, 'openid', 'profile', 'email', or 'offline_access'.",
    "short_description": "",
    "services": [],
    "type": "comma separated strings"
  },
  "identity-provider-url": {
    "id": "identity-provider-url",
    "title": "Identity Provider URL",
    "path": "/identity-provider-settings#identity-provider-url",
    "description": "The base URL to an identity provider's OIDC discovery document.",
    "services": [],
    "type": "string"
  },
  "request-parameters": {
    "id": "identity-provider-request-params",
    "title": "Identity Provider Request Params",
    "path": "/identity-provider-settings#identity-provider-request-params",
    "description": "Specifies a mapping of HTTP headers to be added to proxied requests. Downstream application headers will be overwritten by Pomerium's headers on conflict.",
    "services": [],
    "type": "map of strings key value pairs"
  },
  "identity-provider-polling-min-max-delay": {
    "id": "identity-provider-min-max-delay",
    "title": "Identity Provider Min/Max Delay",
    "path": "/identity-provider-settings#identity-provider-polling-minmax-delay",
    "description": "Sets the minimum and maximum delay times between requests to the identity provider directory.",
    "services": [],
    "type": "string"
  },
  "authorize-service-url": {
    "id": "authorize-service-url",
    "title": "Authorize Service URL",
    "path": "/authorize-service-url",
    "description": "Authorize Service URL is the location of the internally accessible Authorize service.",
    "services": [],
    "type": "URL"
  },
  "authorize-internal-service-url": {
    "id": "authorize-internal-service-url",
    "title": "Authorize Internal Service URL",
    "path": "/authorize-internal-service-url",
    "services": [],
    "type": "URL"
  },
  "default-upstream-timeout": {
    "id": "default-upstream-timeout",
    "title": "Default Upstream Timeout",
    "path": "/default-upstream-timeout",
    "description": "Sets the default timeout applied to a proxied route when no timeout key is specified by the policy.",
    "services": [],
    "type": ""
  },
  "response-headers": {
    "id": "set-response-headers",
    "title": "Set Response Headers",
    "path": "/set-response-headers",
    "description": "Sets static HTTP Response Header values for all managed routes.",
    "services": [],
    "type": "map of strings key value pairs"
  },
  "set-response-headers-route": {
    "id": "set-response-headers-route",
    "title": "Set Response Headers (Per Route)",
    "path": "/routes/headers#set-response-headers",
    "description": "Sets static response header values for a route. These headers take precedence over globally set response headers.",
    "services": [],
    "type": "map of strings key value pairs"
  },
  "jwt-claim-headers": {
    "id": "jwt-claim-headers",
    "title": "JWT Claim Headers",
    "path": "/jwt-claim-headers",
    "description": "Passes user session data to upstream applications as HTTP Request Headers and additional JWT claims.",
    "services": [],
    "type": "slice of string"
  },
  "override-certificate-name": {
    "id": "override-certificate-name",
    "title": "Override Certificate Name",
    "path": "/override-certificate-name",
    "description": "Secure service communication can fail if the external certificate does not match the internally routed service hostname/SNI.",
    "services": [],
    "type": "string"
  },
  "programmatic-redirect-domain-whitelist": {
    "id": "programmatic-redirect-domain-whitelist",
    "title": "Programmatic Redirect Domain Whitelist",
    "path": "/programmatic-redirect-domain-whitelist",
    "services": [],
    "type": "array of string"
  },
  "x-forwarded-for-http-header": {
    "id": "x-forwarded-for-http-header",
    "title": "X-Forwarded-For HTTP Header",
    "path": "/x-forwarded-for-http-header",
    "description": "Indicates which IP addresses a request has flowed through between the client and upstream service.",
    "services": [],
    "type": "bool"
  },
  "the-number-of-trusted-hops": {
    "id": "the-number-of-trusted-hops",
    "title": "The number of trusted hops",
    "path": "the-number-of-trusted-hops",
    "description": "The number of trusted reverse proxies in front of pomerium.",
    "services": [],
    "type": "uint32"
  },
  "codec-type": {
    "id": "codec-type",
    "title": "Codec Type",
    "path": "/codec-type",
    "services": [],
    "type": "string"
  },
  "data-broker-internal-service-url": {
    "id": "data-broker-internal-service-url",
    "title": "Databroker Internal Service URL",
    "path": "/databroker#databroker-internal-service-url",
    "services": [],
    "type": "URL"
  },
  "data-broker-storage-type": {
    "id": "data-broker-storage-type",
    "title": "Databroker Storage Type",
    "path": "/databroker#databroker-storage-type",
    "services": [],
    "type": "string"
  },
  "data-broker-storage-connection-string": {
    "id": "data-broker-storage-connection-string",
    "title": "Databroker Storage Connection String",
    "description": "Sets the database connection string to connect Databroker service to storage backend.",
    "path": "/databroker#databroker-storage-connection-string",
    "services": [],
    "type": "string"
  },
  "data-broker-storage-certificate-file": {
    "id": "data-broker-storage-certificate-file",
    "title": "Databroker Storage Certificate File",
    "path": "/databroker#databroker-storage-certificate-file",
    "services": [],
    "type": "relative file location"
  },
  "data-broker-storage-certificate-key-file": {
    "id": "data-broker-storage-certificate-key-file",
    "title": "Databroker Storage Certificate Key File",
    "path": "/databroker#databroker-storage-certificate-key-file",
    "services": [],
    "type": "relative file location"
  },
  "data-broker-storage-certificate-authority": {
    "id": "data-broker-storage-certificate-authority",
    "title": "Databroker Storage Certificate Authority",
    "path": "/databroker#databroker-storage-certificate-authority",
    "services": [],
    "type": "relative file location"
  },
  "data-broker-storage-tls-skip-verify": {
    "id": "data-broker-storage-tls-skip-verify",
    "title": "Databroker Storage TLS Skip Verify",
    "path": "/databroker#databroker-storage-tls-skip-verify",
    "services": [],
    "type": "bool"
  },
  "allow-any-authenticated-user": {
    "id": "allow-any-authenticated-user",
    "title": "Allow Any Authenticated User",
    "path": "/routes/allow-any-authenticated-user",
    "services": ["proxy"],
    "description": "Allows all requests for any authenticated user or service account. Use with caution.",
    "type": "bool"
  },
  "cluster-name": {
    "id": "cluster-name",
    "title": "Cluster Name",
    "path": "/routes/cluster-name",
    "services": ["proxy"],
    "type": "string"
  },
  "cors-preflight": {
    "id": "cors-preflight",
    "title": "CORS Preflight",
    "path": "/routes/cors-preflight",
    "services": ["proxy"],
    "description": "Allows unauthenticated HTTP OPTIONS requests.",
    "type": "bool"
  },
  "enable-google-cloud-serverless-authentication": {
    "id": "enable-google-cloud-serverless-authentication",
    "title": "Enable Google Cloud Serverless Authentication",
    "short_description": "",
    "path": "/routes/enable-google-cloud-serverless-authentication",
    "services": ["proxy"],
    "type": "bool"
  },
  "error-message-header": {
    "id": "error-message-first-paragraph",
    "title": "Error Message Header",
    "path": "/branding#error-message-header",
    "description": "A paragraph that will appear on all Route Error Pages in the top section.",
    "short_description": "",
    "services": [],
    "type": "string"
  },
  "favicon-url": {
    "id": "favicon-url",
    "title": "Favicon Url",
    "path": "/branding#favicon-url",
    "description": "A Url pointing to your favicon. Defaults to Pomerium's Favicon.",
    "services": [],
    "type": "URL"
  },
  "from": {
    "id": "from",
    "title": "From",
    "path": "/routes/from",
    "services": ["proxy"],
    "short_description": "",
    "type": "URL",
    "description": "The external URL for a proxied request. Must contain a scheme and Hostname, must not contain a path."
  },
  "health-checks": {
    "id": "health-checks",
    "title": "Health Checks",
    "path": "/routes/load-balancing#health-checks",
    "services": ["proxy"],
    "type": "array of objects",
    "description": "Issues periodic health check requests to upstream servers. Unhealthy servers won't serve traffic."
  },
  "health-checks-timeout": {
    "id": "http-health-check-timeout",
    "title": "Health Checks Timeout",
    "path": "/routes/load-balancing#supported-health-checks-parameters",
    "description": "The total time to wait for a health check response. Required.",
    "type": "duration"
  },
  "health-checks-interval": {
    "id": "http-health-check-interval",
    "title": "Health Checks Interval",
    "path": "/routes/load-balancing#supported-health-checks-parameters",
    "description": "The interval between health checks. Required.",
    "type": "duration"
  },
  "health-checks-unhealthy-threshold": {
    "id": "http-health-check-unhealthy-threshold",
    "title": "Health Checks Unhealthy Threshold",
    "path": "/routes/load-balancing#supported-health-checks-parameters",
    "description": "The number of unhealthy health checks required before a host is marked unhealthy. Required.",
    "type": "UInt32Value"
  },
  "health-checks-healthy-threshold": {
    "id": "http-health-check-healthy-threshold",
    "title": "Health Checks Healthy Threshold",
    "path": "/routes/load-balancing#supported-health-checks-parameters",
    "description": "The number of healthy health checks required before a host is marked healthy. Required.",
    "type": "UInt32Value"
  },
  "http-health-check-host": {
    "id": "http-health-check-host",
    "title": "HTTP Health Check Host",
    "path": "/routes/load-balancing#http-healthcheck-overview",
    "description": "The Host header value in the HTTP health check request. If empty, the name of the cluster this health check is associated with will be used. Optional.",
    "type": "string"
  },
  "http-health-check-path": {
    "id": "http-health-check-path",
    "title": "HTTP Health Check Path",
    "description": "Specifies the HTTP path requested during a health check. Required.",
    "path": "/routes/load-balancing#http-healthcheck-overview",
    "type": "string"
  },
  "http-health-check-expected-statuses": {
    "id": "http-health-check-expected-statuses",
    "title": "HTTP Health Check Expected Statuses",
    "path": "/routes/load-balancing#http-healthcheck-overview",
    "description": "Defines a range of HTTP response statuses that are considered healthy. Optional.",
    "type": "Int64Range"
  },
  "http-health-check-codec-client-type": {
    "id": "http-health-check-codec-client-type",
    "title": "HTTP Health Check Codec Client Type",
    "path": "/routes/load-balancing#http-healthcheck-overview",
    "description": "Specifies which application protocol to use. Optional.",
    "type": "CodecClientType"
  },
  "tcp-health-check-send": {
    "id": "tcp-health-check-send",
    "title": "TCP Health Check Send",
    "path": "/routes/load-balancing#tcp-healthcheck-overview",
    "description": "Defines the payload, which must be one of text or binary. An empty payload results in a connect-only health check. Optional.",
    "type": "Payload"
  },
  "tcp-health-check-receive": {
    "id": "tcp-health-check-receive",
    "title": "TCP Health Check Receive",
    "path": "/routes/load-balancing#tcp-healthcheck-overview",
    "description": "Checks a response with 'fuzzy' matching to the extent that each payload block must be found, and in the specified order, but not necessarily contiguous. Optional.",
    "type": "Payload"
  },
  "grpc-health-check-authority": {
    "id": "grpc-health-check-authority",
    "title": "gRPC Health Check Authority",
    "path": "/routes/load-balancing#grpc-healthcheck-overview",
    "description": "Specifies the ':authority' header value in a gRPC health check request. Optional.",
    "type": "string"
  },
  "grpc-health-check-service-name": {
    "id": "grpc-health-check-service-name",
    "title": "gRPC Health Check Service Name",
    "path": "/routes/load-balancing#grpc-healthcheck-overview",
    "description": "Specifies the service name parameter sent to the gRPC service. Optional.",
    "type": "string"
  },
  "headers-settings": {
    "id": "headers-settings",
    "title": "Headers Settings",
    "path": "/routes/headers"
  },
  "host-rewrite": {
    "id": "host-rewrite",
    "title": "Host Rewrite",
    "path": "/routes/headers#2-host-rewrite",
    "services": ["proxy"],
    "description": "Rewrites the Host header to a new literal value.",
    "type": "string"
  },
  "host-rewrite-header": {
    "id": "host-rewrite-header",
    "title": "Host Rewrite Header",
    "path": "/routes/headers#3-host-rewrite-header",
    "services": ["proxy"],
    "description": "Rewrites the Host header to match an incoming header value.",
    "type": "string"
  },
  "host-path-rewrite-header": {
    "id": "host-path-rewrite-header",
    "title": "Host Path Rewrite Header",
    "path": "/routes/headers#4-host-path-regex-rewrite-patternsubstitution",
    "services": ["proxy"],
    "description": "Rewrites the Host header according to a regular expression matching the path.",
    "type": "string"
  },
  "host-path-rewrite-substitution": {
    "id": "host-path-rewrite-substitution",
    "title": "Host Path Regex Rewrite Substitution",
    "path": "/routes/headers#4-host-path-regex-rewrite-patternsubstitution",
    "services": ["proxy"],
    "description": "Rewrites the Host header according to a regular expression matching the substitution.",
    "type": "string"
  },
  "timeouts": {
    "id": "timeouts",
    "title": "Timeouts Settings",
    "path": "/routes/timeouts"
  },
  "route-idle-timeout": {
    "id": "route-idle-timeout",
    "title": "Idle Timeout",
    "path": "/routes/timeouts#idle-timeout",
    "services": ["proxy"],
    "description": "Sets the time to terminate the upstream connection if there are no active streams. Defaults to 5 minutes.",
    "type": "duration"
  },
  "identity-provider-client-id-per-route": {
    "id": "identity-provider-client-id-per-route",
    "title": "Identity Provider Client ID (per route)",
    "path": "/routes/identity-provider-client-id-per-route",
    "services": ["proxy"],
    "type": "string"
  },
  "identity-provider-client-secret-per-route": {
    "id": "identity-provider-client-secret-per-route",
    "title": "Identity Provider Client Secret (per route)",
    "path": "/routes/identity-provider-client-secret-per-route",
    "services": ["proxy"],
    "type": "string"
  },
  "kubernetes-service-account-token": {
    "id": "kubernetes-service-account-token",
    "title": "Kubernetes Service Account Token",
    "path": "/routes/kubernetes-service-account-token",
    "services": ["proxy"],
    "description": "String or relative file location containing a Kubernetes bearer token",
    "type": "string"
  },
  "service-account-token": {
    "id": "service-account-token",
    "title": "Service Account Token",
    "path": "/../capabilities/service-accounts#authenticate-with-the-service-account-jwt",
    "description": "The generated JWT used to authenticate this service account. See documentation for supported authentication methods and examples."
  },
  "service-account-description": {
    "id": "service-account-description",
    "title": "Service Account Description",
    "path": "/../capabilities/service-accounts",
    "description": "A customizable description that identifies this service account."
  },
  "service-account-expiration": {
    "id": "service-account-expiration",
    "title": "Service Account Expiration",
    "path": "/../capabilities/service-accounts",
    "description": "Sets the expiration time for this service account token. After the specified date, this token becomes invalid."
  },
  "service-account-user-id": {
    "id": "service-account-user-id",
    "title": "Service Account User ID",
    "path": "/../capabilities/service-accounts",
    "description": "The User ID associated with this service account."
  },
  "load-balancing-settings": {
    "id": "load-balancing-settings",
    "title": "Load Balancing Settings",
    "path": "/routes/load-balancing"
  },
  "load-balancing-policy": {
    "id": "load-balancing-policy",
    "title": "Load Balancing Policy",
    "path": "/routes/load-balancing#load-balancing-policy",
    "description": "Defines the Load Balancing strategy for multiple upstream servers.",
    "services": ["proxy"],
    "type": "enum"
  },
  "load-balancing-policy-config": {
    "id": "load-balancing-policy-config",
    "title": "Load Balancing Policy Config",
    "path": "/routes/load-balancing-policy-config",
    "services": ["proxy"],
    "type": "object"
  },
  "logo-url": {
    "id": "logo-url",
    "title": "Logo Url",
    "path": "/branding#logo-url",
    "description": "A Url pointing to your logo. Defaults to Pomerium's Logo.",
    "services": [],
    "type": "URL"
  },
  "outlier-detection": {
    "id": "outlier-detection",
    "title": "Outlier Detection",
    "path": "/routes/outlier-detection",
    "services": ["proxy"],
    "type": "object"
  },
  "pass-identity-headers-per-route": {
    "id": "pass-identity-headers-per-route",
    "title": "Pass Identity Headers (per route)",
    "description": "If applied, passes X-Pomerium-Jwt-Assertion header and JWT Claims Headers to the upstream application.",
    "short_description": "",
    "path": "/routes/pass-identity-headers-per-route",
    "services": ["proxy"],
    "type": "boolean"
  },
  "pass-identity-headers": {
    "id": "pass-identity-headers",
    "title": "Pass Identity Headers",
    "description": "If applied, passes X-Pomerium-Jwt-Assertion header and JWT Claims Headers to all upstream applications.",
    "short_description": "",
    "path": "/pass-identity-headers",
    "services": ["proxy"],
    "type": "boolean"
  },
  "path-matching-settings": {
    "id": "path-matching",
    "title": "Path Matching Settings",
    "path": "/routes/path-matching",
    "services": ["proxy"],
    "description": "Configure Path Matching settings in Pomerium.",
    "type": "string"
  },
  "path": {
    "id": "path",
    "title": "Path",
    "path": "/routes/path-matching#path",
    "services": ["proxy"],
    "description": "Matches incoming requests with a path that is an exact match for the specified path.",
    "short_description": "",
    "type": "string"
  },
  "policy-enforcement": {
    "id": "policy-enforcement",
    "title": "Policy Enforcement",
    "description": "Determines if a policy applies to all routes or can be applied optionally to a given route."
  },
  "policy-description": {
    "id": "policy-description",
    "title": "Policy Description",
    "description": "Adds an optional description for this policy."
  },
  "policy-inheritance": {
    "id": "policy-inheritance",
    "title": "Enforcement",
    "path": "/../capabilities/namespacing#hierarchical-policy-enforcement",
    "services": [],
    "type": "string"
  },
  "policy-definition": {
    "id": "policy-definition",
    "title": "Definition",
    "description": "Adds the explanation presented to an unauthorized user when they access a route with this policy. Optional.",
    "services": [],
    "type": "string"
  },
  "policy-explanation": {
    "id": "policy-explanation",
    "title": "Explanation",
    "description": "Adds the explanation presented to an unauthorized user when they access a route with this policy. Optional.",
    "services": [],
    "type": "string"
  },
  "policy-remediation": {
    "description": "Adds the message, warning, or instructions presented to an unauthorized user to help them self-remediate. Optional.",
    "id": "policy-remediation",
    "title": "Remediation",
    "services": [],
    "type": "string",
    "enterpriseOnly": "true"
  },
  "prefix": {
    "id": "prefix",
    "title": "Prefix",
    "path": "/routes/path-matching#prefix",
    "services": ["proxy"],
    "description": "Matches incoming requests with a path that begins with the specified prefix.",
    "short_description": "",
    "type": "string"
  },
  "path-rewriting-settings": {
    "id": "path-rewriting-settings",
    "title": "Path Rewriting Settings",
    "path": "/routes/path-rewriting",
    "services": ["proxy"],
    "description": "Configure Path Rewriting settings in Pomerium.",
    "type": "string"
  },
  "prefix-rewrite": {
    "id": "prefix-rewrite",
    "title": "Prefix Rewrite",
    "path": "/routes/path-rewriting#prefix-rewrite",
    "services": ["proxy"],
    "description": "While forwarding a request, Prefix Rewrite swaps the matched prefix (or path) with the specified value.",
    "short_description": "",
    "type": "string"
  },
  "preserve-host-header": {
    "id": "preserve-host-header",
    "title": "Preserve Host Header",
    "description": "Passes the host header from the incoming request to the proxied host, instead of the destination hostname.",
    "short_description": "",
    "path": "/routes/headers#1-preserve-host-header",
    "services": ["proxy"],
    "type": "boolean"
  },
  "primary-color": {
    "id": "primary-color",
    "title": "Primary Color",
    "path": "/branding#primary-color",
    "description": "A hex code that determines the primary color for the Enterprise Console and Route Error Details pages.",
    "short_description": "",
    "services": [],
    "type": "string"
  },
  "primary-color-dark-mode": {
    "id": "darkmode-primary-color",
    "title": "Primary Color (Dark Mode)",
    "path": "/branding#primary-color-dark-mode",
    "description": "A hex code that determines the primary color for the Enterprise Console and Route Error Details pages when in Dark Mode.",
    "short_description": "",
    "services": [],
    "type": "string"
  },
  "public-access": {
    "id": "public-access",
    "title": "Public Access",
    "path": "/routes/public-access",
    "services": ["proxy"],
    "description": "Instructs Pomerium to grant unauthorized and unauthenticated access to all requests to the upstream service. Should be applied only to public web services. If applied, no other policy should be provided for this route.",
    "type": "bool"
  },
  "redirect": {
    "id": "redirect",
    "title": "Redirect",
    "path": "/routes/redirect",
    "services": ["proxy"],
    "description": "Redirects incoming requests to a new URL.",
    "type": "object"
  },
  "https-redirect": {
    "id": "https-redirect",
    "title": "HTTPS Redirect",
    "path": "/routes/redirect#redirect-options",
    "type": "Boolean",
    "description": "Swaps the incoming Scheme with 'https'."
  },
  "scheme-redirect": {
    "id": "scheme-redirect",
    "title": "Scheme Redirect",
    "path": "/routes/redirect#redirect-options",
    "type": "String",
    "description": "Swaps the incoming Scheme with the specified value."
  },
  "host-redirect": {
    "id": "host-redirect",
    "title": "Host Redirect",
    "path": "/routes/redirect#redirect-options",
    "type": "String",
    "description": "Swaps the incoming Host with the specified value."
  },
  "port-redirect": {
    "id": "port-redirect",
    "title": "Port Redirect",
    "path": "/routes/redirect#redirect-options",
    "type": "Integer",
    "description": "Swaps the incoming Port with the specified value. Type: Integer."
  },
  "path-redirect": {
    "id": "path-redirect",
    "title": "Path Redirect",
    "path": "/routes/redirect#redirect-options",
    "type": "String",
    "description": "Swaps the incoming Path portion of the URL with the specified value."
  },
  "prefix-rewrite-redirect": {
    "id": "path-rewrite-redirect",
    "title": "Prefix Rewrite Redirect",
    "path": "/routes/redirect#redirect-options",
    "type": "String",
    "description": "Swaps the incoming Matched Prefix with the specified value."
  },
  "response-code": {
    "id": "response-code",
    "title": "Response Code",
    "path": "/routes/redirect#redirect-options",
    "type": "String",
    "description": "Sets the Response Code to use for the redirect. Defaults to 301. Type: Integer."
  },
  "strip-query": {
    "id": "strip-query",
    "title": "Strip Query",
    "path": "/routes/redirect#redirect-options",
    "type": "Boolean",
    "description": "Indicates that during redirection, the Query portion of the URL will be removed. Defaults to false."
  },
  "regex": {
    "id": "regex",
    "title": "Regex",
    "path": "/routes/path-matching#regex",
    "services": ["proxy"],
    "description": "Matches incoming requests with a path that matches the specified regular expression.",
    "type": "regular expression"
  },
  "regex-priority-order": {
    "id": "regex-priority-order",
    "title": "Regex Priority Order",
    "path": "/routes/regex-priority-order",
    "services": ["proxy"],
    "description": "Rewrites the URL path according to the regex rewrite pattern.",
    "type": "uint32"
  },
  "regex-rewrite": {
    "id": "regex-rewrite",
    "title": "Regex Rewrite",
    "path": "/routes/path-rewriting#regex-rewrite",
    "services": ["proxy"],
    "description": "Rewrites the URL path according to the regex rewrite pattern.",
    "short_description": "",
    "type": "string"
  },
  "regex-rewrite-substitution": {
    "id": "regex-rewrite-substitution",
    "title": "Regex Rewrite Substitution",
    "path": "/routes/path-rewriting#regex-rewrite",
    "description": "Rewrites the URL path according to the regex rewrite substitution.",
    "short_description": "",
    "enterpriseOnly": true
  },
  "remove-request-headers": {
    "id": "remove-request-headers",
    "title": "Remove Request Headers",
    "path": "/routes/headers#remove-request-headers",
    "services": ["proxy"],
    "description": "Removes given request headers so they do not reach the upstream server.",
    "type": "array of strings"
  },
  "rewrite-response-headers": {
    "id": "rewrite-response-headers",
    "title": "Rewrite Response Headers",
    "path": "/routes/headers#rewrite-response-headers",
    "services": ["proxy"],
    "description": "Modifies response headers before they are returned to the client. 'Header' matches the HTTP header name; 'prefix' will be replaced with 'value'.",
    "type": "object"
  },
  "route-timeout": {
    "id": "route-timeout",
    "title": "Route Timeout",
    "path": "/routes/timeouts#route-timeout",
    "services": ["proxy"],
    "description": "Sets the per-route timeout value. Cannot exceed global timeout values. Defaults to 30 seconds.",
    "type": "duration"
  },
  "secondary-color": {
    "id": "secondary-color",
    "title": "Secondary Color",
    "description": "A hex code that determines the secondary color for the Enterprise Console and Route Error Details pages.",
    "path": "/branding#secondary-color",
    "short_description": "",
    "services": [],
    "type": "string"
  },
  "secondary-color-dark-mode": {
    "id": "darkmode-secondary-color",
    "title": "Secondary Color (Dark Mode)",
    "description": "A hex code that determines the secondary color for the Enterprise Console and Route Error Details pages when in Dark Mode.",
    "short_description": "",
    "path": "/branding#secondary-color-dark-mode",
    "services": [],
    "type": "string"
  },
  "set-request-headers": {
    "id": "set-request-headers",
    "title": "Set Request Headers",
    "path": "/routes/headers#set-request-headers",
    "services": ["proxy"],
    "type": "map of strings key value pairs",
    "description": "Sets static and dynamic values for given request headers. Available substitutions: ${pomerium.id_token}, ${pomerium.access_token}, ${pomerium.client_cert_fingerprint}.",
    "short_description": ""
  },
  "show-error-details": {
    "id": "show-error-details",
    "title": "Show Error Details",
    "description": "If applied, shows error details, including policy explanation and remediation for 403 Forbidden responses.",
    "path": "/routes/show-error-details",
    "services": [],
    "type": "bool"
  },
  "signout-redirect-url": {
    "id": "signout-redirect-url",
    "title": "Signout Redirect URL",
    "path": "/signout-redirect-url",
    "services": ["proxy"],
    "type": "URL"
  },
  "tls-settings": {
    "id": "tls-settings",
    "title": "TLS Settings",
    "path": "/routes/tls",
    "services": ["proxy"],
    "type": "string"
  },
  "tls-client-certificate": {
    "id": "tls-client-certificate",
    "title": "TLS Client Certificate",
    "path": "/routes/tls#tls-client-certificate",
    "services": ["proxy"],
    "description": "Pomerium presents this client certificate to upstream services when requested to enforce mTLS.",
    "type": "string"
  },
  "tls-custom-certificate-authority": {
    "id": "tls-custom-certificate-authority",
    "title": "TLS Custom Certificate Authority",
    "path": "/routes/tls#tls-custom-certificate-authority",
    "description": "Defines a set of root certificate authorities that Pomerium uses when verifying upstream server certificates.",
    "services": ["proxy"]
  },
  "tls-downstream-client-certificate-authority": {
    "id": "tls-downstream-client-certificate-authority",
    "title": "TLS Downstream Client Certificate Authority",
    "path": "/tls#tls-downstream-client-certificate-authority",
    "services": ["proxy"]
  },
  "tls-skip-verification": {
    "id": "tls-skip-verification",
    "title": "TLS Skip Verification",
    "path": "/routes/tls#tls-skip-verification",
    "services": ["proxy"],
    "description": "If applied, Pomerium accepts any certificate presented by the upstream server and any Hostname in that certificate. Use for testing only.",
    "type": "bool"
  },
  "tls-upstream-allow-renegotiation": {
    "id": "tls-upstream-allow-renegotiation",
    "title": "TLS Upstream Allow Renegotiation",
    "path": "/routes/tls#tls-upstream-allow-renegotiation",
    "services": ["proxy"],
    "description": "If applied, this setting allows server-initiated TLS renegotiation for upstream servers.",
    "type": "bool"
  },
  "tls-upstream-server-name": {
    "id": "tls-upstream-server-name",
    "title": "TLS Upstream Server Name",
    "path": "/routes/tls#tls-upstream-server-name",
    "services": [],
    "description": "This server name overrides the Hostname in the 'To:' field, and will be used to verify the certificate name.",
    "type": "string"
  },
  "tls-downstream-server-name": {
    "id": "tls-downstream-server-name",
    "title": "TLS Downstream Server Name",
    "path": "/routes/tls#tls-downstream-server-name",
    "services": [],
    "description": "This server name overrides the Hostname in the 'From:' field, and serves as the Server Name Indication when establishing a TLS connection with Pomerium.",
    "type": "string"
  },
  "to": {
    "id": "to",
    "title": "To",
    "path": "/routes/to",
    "services": ["proxy"],
    "description": "The destination(s) of a proxied request. Must contain a scheme and Hostname, with an optional weight.",
    "type": "URL(s)",
    "short_description": ""
  },
  "spdy": {
    "id": "spdy",
    "title": "SPDY",
    "path": "/routes/timeouts#spdy",
    "services": ["proxy"],
    "description": "If applied, this setting enables Pomerium to proxy SPDY protocol upgrades.",
    "type": "bool"
  },
  "websocket-connections": {
    "id": "websocket-connections",
    "title": "Websocket Connections",
    "path": "/routes/timeouts#websocket-connections",
    "services": ["proxy"],
    "description": "If applied, this setting enables Pomerium to proxy websocket connections.",
    "type": "bool"
  },
  "google-cloud-serverless-authentication-service-account": {
    "id": "google-cloud-serverless-authentication-service-account",
    "title": "Google Cloud Serverless Authentication Service Account",
    "path": "/google-cloud-serverless-authentication-service-account",
    "services": ["authorize"],
    "type": "string",
    "short_description": ""
  },
  "signing-key": {
    "id": "signing-key",
    "title": "Signing Key",
    "path": "/signing-key",
    "description": "Signing Key is the key used to sign a user's attestation JWT which can be consumed by upstream applications to pass along identifying user information like username, id, and groups.",
    "services": [],
    "type": "string",
    "short_description": "y"
  },
  "signing-key-file": {
    "id": "signing-key-file",
    "title": "Signing Key File",
    "path": "/signing-key-file",
    "description": "File path to a secret containing the signing key, used to sign a user's attestation JWT which can be consumed by upstream applications to pass along identifying user information like username, id, and groups.",
    "services": [],
    "type": "string",
    "short_description": ""
  },
  "devices": {
    "id": "devices",
    "title": "Devices",
    "description": "Introduced in v0.16.0, the Manage Devices page lets administrators manage user devices for policy-based authorization.",
    "path": "/../enterprise/reference/manage#devices",
    "enterpriseOnly": true
  },
  "manage-devices": {
    "title": "Manage Devices",
    "id": "manage-devices",
    "path": "/../capabilities/device-identity",
    "enterpriseOnly": true
  },
  "new-enrollment": {
    "id": "new-enrollment",
    "title": "New Enrollment",
    "path": "/../capabilities/device-identity#new-enrollment",
    "enterpriseOnly": true
  },
  "migrate-routes": {
    "id": "migrate-routes",
    "title": "Migrate Routes",
    "description": "A way to migrate routes from an existing Open Source Pomerium config file. You probably only want to do this once.",
    "enterpriseOnly": true
  },
  "search-users": {
    "id": "search-users",
    "title": "Search Users",
    "description": "New Enrollment URLs are only valid for the specified user.",
    "path": "/../capabilities/device-identity#new-enrollment",
    "enterpriseOnly": true
  },
  "redirect-url": {
    "id": "redirect-url",
    "title": "Redirect URL",
    "path": "/../capabilities/device-identity#create-an-enrollment-link",
    "description": "Optional: The URL the user will be taken to after device enrollment is successful.",
    "enterpriseOnly": true
  },
  "enrollment-type": {
    "id": "enrollment-type",
    "title": "Enrollment Type",
    "description": "Specify if the user can enroll any device identity, or restrict it to a secure enclave.",
    "path": "/../capabilities/device-identity#new-enrollment",
    "enterpriseOnly": true
  },
  "databroker-settings": {
    "id": "databroker",
    "title": "Databroker Settings",
    "path": "/databroker",
    "services": ["databroker"]
  },
  "direct-response": {
    "id": "direct-response",
    "title": "Direct Response",
    "path": "/routes/direct-response",
    "description": "Instructs Pomerium to send a static HTTP response to the downstream client for a managed route.",
    "services": ["proxy"]
  },
  "response-status": {
    "id": "response-status",
    "title": "Direct Response Status",
    "path": "/routes/direct-response",
    "description": "Sets the status code that Pomerium returns for a static HTTP response. Type: Integer. For example, 200.",
    "services": ["proxy"]
  },
  "response-body": {
    "id": "response-body",
    "title": "Direct Response Body",
    "path": "/routes/direct-response",
    "description": "Specifies the response body that Pomerium returns for a static HTTP response. Type: String. For example, 'plain text.'",
    "services": ["proxy"]
  },
  "cluster-settings-name": {
    "id": "cluster-settings-name",
    "title": "Cluster Name",
    "description": "A customizable name that identifies a cluster. Defaults to the cluster's randomly generated starter domain name."
  },
  "cluster-starter-domain": {
    "id": "cluster-starter-domain",
    "title": "Cluster Starter Domain",
    "description": "The randomly generated starter domain assigned to this cluster. This domain is not changeable, and is designed to be used as a proof of concept."
  },
  "detected-ip-address": {
    "id": "detected-ip-address",
    "title": "Detected IP Address",
    "description": "The IP address detected for this cluster server."
  },
  "override-ip-address": {
    "id": "override-ip-address",
    "title": "Override IP Address",
    "description": "Manually sets the IP address of this cluster and overrides the detected IP. Use this setting if Pomerium can't connect to cluster over detected IP."
  },
  "cluster-identity": {
    "id": "cluster-identity",
    "title": "Cluster Identity",
    "description": "The cluster token that associates this cluster with a personal account or organization."
  },
  "custom-domains": {
    "id": "custom-domains",
    "title": "Custom Domains",
    "description": "A custom wildcard subdomain used to define routes in this cluster. Can only be associated with 1 cluster."
  }
}
